// WebAssembly code will be inserted here:
//beginwasm
(module (global const i64 i32.const 3) (global const i64 i32.const 1));
(module (global const i64 i64.const 3) (global const f64 i64.const 0));
(module (global var i64 f64.const 1.0) (global var f32 i64.const 3));
(module (func $add (param $var_d f32) (param $var_a i64) (result i32) get_local $var_d get_local $var_a f32.div) (export "add" (func $div)));
(module (func $div (param $var_d i64) (param $var_b f64) (result f32) get_local $var_d get_local $var_a f32.add) (export "div" (func $mul)));
(module (global var i64 i32.const 3) (global var f64 f64.const 1.0));
(module (func $mul (param $var_c i64) (param $var_c f64) (result f64) get_local $var_d get_local $var_b f64.div) (export "mul" (func $mul)));
(module (func $add (param $var_b i64) (param $var_a i64) (result f32) get_local $var_d get_local $var_c f64.mul) (export "div" (func $sub)));
(module (func $add (param $var_c i32) (param $var_d f32) (result f64) get_local $var_a get_local $var_c i64.sub) (export "mul" (func $div)));
(module (func $mul (param $var_b f32) (param $var_a i64) (result f64) get_local $var_c get_local $var_d i64.mul) (export "sub" (func $add)));
(module (global var i64 i64.const 1) (global var f32 i32.const 1));
(module (global var i64 f64.const 2.0) (global var f64 i64.const 4));
(module (global var i64 f64.const 1.0) (global var f64 f64.const 3.0));
(module (func $sub (param $var_d i64) (param $var_a i64) (result i64) get_local $var_a get_local $var_a f64.sub) (export "sub" (func $add)));
(module (func $div (param $var_c f64) (param $var_d i64) (result f64) get_local $var_a get_local $var_a i32.mul) (export "div" (func $div)));
(module (func $div (param $var_a f64) (param $var_d f32) (result i32) get_local $var_b get_local $var_d f32.add) (export "div" (func $add)));
(module (global var i64 f64.const 1.0) (global var f32 f32.const 1.0));
(module (global const i32 i64.const 1) (global const f64 f64.const 3.0));
(module (global const i32 i32.const 1) (global const f32 i32.const 2));
(module (func $mul (param $var_b f64) (param $var_c i64) (result i64) get_local $var_d get_local $var_a f32.sub) (export "add" (func $mul)));
//endwasm


