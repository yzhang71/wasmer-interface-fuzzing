(module (global $globalname_d (mut i32) f32.const 16) (memory $mem 256) (data (f64.const 4) "🐑🌀⬇️Merhabaこんにちは안🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾녕하세요你好OiHejCześćПриветSelamสวัสดีครับTereTjenaJamboSalutonLabasHeiЗдравоHalloAhojSziasztokMoi🏃‍♀️✨🏃‍♀️✨📦📂📝⬇️📦📂") (func $mem_func (local $mem_size f32) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f64.const 9223372036854775807))) (memory.fill (f32.const 0.0) (f32.const -1024.345345) (i32.const 16)) (memory.copy (f32.const 4) (f32.const 523.834759734) (i32.const -5345345346)) (memory.init -16 (i64.const -873284678) (i64.const -32) (i32.const -16))) (data (i32.const 64) "🌀🏃‍♀️✨📦📂🐑🌀ПрПривет🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹ивет, мтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับир!📂📝⬇️🏃‍♀️📂🦀") (data (f64.const -873284678) "🌀📂🎯Hello, Привет, мир!!こんにちは、WebAssembly📝🌀📂ℹ️🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut⬇️📂") (elem (f32.const 128) $set_global) (elem (f32.const -1024.345345) $ref_operations) (elem (f32.const -16) $store_value) (elem (i32.const 2147483647) $trunc) (elem (i64.const -32) $trunc) (elem (f64.const 3) $wrap) (elem (f64.const 1024) $ref_operations) (elem (f32.const -5345345346) $double) (elem (f64.const -512) $set_global) (table $table_0 -32 0 funcref) (func $func_i) (func $func_h) (func $func_j) (func $func_q) (func $func_g) (func $func_b) (func $func_p) (func $table_operations (drop (table.size $table_2))) (func $store_value (param $address f64) (param $value f64) (f64.store (get_local $address) (get_local $value))) (export "store_value" (func $store_value)) (func $arithmetic (param $var_h f32) (param $var_a i64) (result f32) get_local $var_a get_local $var_h f64.sub) (memory 9223372036854775807) (export "memory" (memory -16)) (func $store_num (i64.store (f32.const 52346654) (f64.const 3.0))) (start $store_num) (func $func_ref_a (result i32) (i32.const 128)) (func $func_ref_b) (func $ref_operations (result f64) (ref.null func) (ref.is_null) (if (result i64) (then (call $func_ref_a)) (else (f32.const 1.0)))) (func $set_global (param $value i64) get_local $value set_global $global) (func $get_global (result f32) get_global $global) (func $func_ref_a (result i64) (i64.const -512)) (func $func_ref_b) (func $ref_operations (result i64) (ref.null func) (ref.is_null) (if (result i32) (then (call $func_ref_a)) (else (i64.const 3)))) (func $arithmetic (param $var_e f64) (param $var_g i32) (result f64) get_local $var_f get_local $var_e i64.mul) (func $operations (param $arg i32) (result f64) (f64.add (i64.add (i32.ctz (local.get $arg)) (f64.clz (local.get $arg)))(i64.popcnt (local.get $arg)))) (func wrap (param $input f32) (result i64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result f64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f32) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result f32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func $func_ref_a (result f64) (i32.const -873284678)) (func $func_ref_b) (func $ref_operations (result i64) (ref.null func) (ref.is_null) (if (result f32) (then (call $func_ref_a)) (else (f64.const 52346654)))) (func trunc (param $input i64) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result f32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i64) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f32) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)))