(module (global $globalname_g (mut f64) i32.const 3) (global $globalname_b (mut f32) f64.const -678234928375235) (global $globalname_g (mut f64) f32.const -128) (global $globalname_b (mut f32) i32.const 4) (global $globalname_g (mut i64) f32.const 2147483647) (global $globalname_d (mut f64) f64.const -678234928375235) (global $globalname_a (mut f32) f64.const -256) (global $globalname_c (mut i64) i64.const 2147483647.0) (memory $mem -8465473543.4387534) (data (f64.const 1024) "®🦀🏰Olá🐾🦜Привет🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly！") (func $mem_func (local $mem_size f32) (local $mem_grow f32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i32.const 8))) (memory.fill (i64.const 523.834759734) (f64.const 0) (i32.const -5345345346)) (memory.copy (f32.const -128) (f64.const -8) (f32.const 9223372036854775807.0)) (memory.init 3.0 (i32.const 1) (f64.const 3.0) (i32.const -256))) (data (i32.const 2.0) "🌀⬇️🏃‍♀️✨Hell🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Bueno🌳🌱🌰🌻🌼🌷o, Привет, мир!!こんにちは、WebAssembly📦📂") (elem (i32.const 512) $sum_n) (elem (f32.const 64) $ref_operations) (elem (f32.const -5345345346) $operations) (elem (i32.const -1) $extend) (table $table_1 -256 -8465473543.234234 funcref) (func $func_f) (func $func_f) (func $func_o) (func $func_a) (func $table_operations (drop (table.size $table_6))) (table $table_9 -5345345346 3 funcref) (func $func_e) (func $func_o) (func $func_n) (func $func_q) (func $func_k) (func $func_p) (func $func_i) (func $func_b) (func $func_g) (func $table_operations (drop (table.size $table_7))) (table $table_7 32 -2452346536.5345346 funcref) (func $func_n) (func $func_a) (func $func_h) (func $func_k) (func $func_j) (func $func_o) (func $func_n) (func $func_p) (func $func_f) (func $func_d) (func $func_q) (func $func_b) (func $func_j) (func $func_k) (func $func_l) (func $func_k) (func $func_i) (func $func_l) (func $func_p) (func $func_l) (func $func_f) (func $func_e) (func $func_n) (func $table_operations (drop (table.size $table_8))) (func $load_value (param $address f64) (result i64) (i32.load (get_local $address))) (export "load_value" (func $load_value)))