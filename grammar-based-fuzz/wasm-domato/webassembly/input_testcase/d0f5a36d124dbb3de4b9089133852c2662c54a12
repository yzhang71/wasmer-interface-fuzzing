(module (global $globalname_d (mut i64) f32.const 8) (global $globalname_d (mut i64) f64.const -9223372036854775807.0) (global $globalname_e (mut f64) f64.const 1.0) (global $globalname_a (mut i32) f64.const 1024) (global $globalname_f (mut i64) i32.const -32) (global $globalname_a (mut f32) f32.const 32) (global $globalname_c (mut f64) i32.const -64) (global $globalname_d (mut i32) i32.const 1024) (global $globalname_a (mut f32) f32.const 16) (global $globalname_b (mut i64) f32.const 16) (global $globalname_b (mut i64) f64.const 256) (memory $mem 16) (data (f32.const -9223372036854775807.0) "🐑🌀Привет, мир!📂Hello, !こんにちは、WebAssembly🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🐑") (func $mem_func (local $mem_size f32) (local $mem_grow f32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const 3.0))) (memory.fill (f32.const 1.0) (i32.const 0) (i32.const 4)) (memory.copy (i32.const 32) (i64.const -32) (f64.const -256)) (memory.init 256 (f64.const 2147483647) (f32.const 9223372036854775807.0) (f64.const 9223372036854775807))) (data (f32.const 1.0) "Hello, WebAssembly!こんにちは、WebAssembly！こんにちは🌸你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑🥝🥥🥒🥔🥕세요🌺Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌ਸਤਸ੍ਰੀਅਕਾਲ🌄") (data (f64.const -2147483647.0) "🌀📂🎯Hello, Привет, мир!!こんにちは、WebAssembly📝🌀📂ℹ️🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut⬇️📂") (data (f32.const 9223372036854775807) "🌀📂🎯Hello, Привет, мир!!こんにちは、WebAssembly📝🌀📂ℹ️🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut⬇️📂") (data (f32.const 64) "こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌐CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTag👯⛔こんにちは、こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯🌲🌳🌱🌰WebAssembly！") (data (f32.const 64) "こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAssembly！") (data (f32.const 1024) "🐑🌀Привет, мир!📂Hello, !こんにちは、WebAssembly🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🐑") (data (i32.const -678234928375235) "🐑🌀Привет, мир!jourHolaשלוםЗдравствуйт🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלום🐑🌀Привет, ми📂®🦀") (data (i64.const -678234928375235) "🌀🏃‍♀️✨📦📂🐑🌀ПрПривет🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹ивет, мтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับир!📂📝⬇️🏃‍♀️📂🦀") (data (i64.const -256) "にちは🌀🏃‍♀️✨📦📂📝⬇️🏃‍♀️🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly📂") (data (i32.const 52346654) "🐑🌀⬇️Merhabaこんにちは안🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾녕하세요你好OiHejCześćПриветSelamสวัสดีครับTereTjenaJamboSalutonLabasHeiЗдравоHalloAhojSziasztokMoi🏃‍♀️✨🏃‍♀️✨📦📂📝⬇️📦📂") (data (i32.const -512) "®🦀🏰Olá🐾🦜Привет🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly！") (data (i32.const 4.0) "こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAssembly！") (data (i64.const 758394) "にちは🌀🐑🌀🌟CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTag👯⛔こんにちは、こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯🌲🌳🌱🌰WebAssemblyПривет, мир!📂📂🔧") (elem (i32.const -9223372036854775807) $double) (elem (i64.const 4.0) $is_even) (elem (f32.const -2147483647.0) $store_num) (elem (i32.const 0) $local_tee) (elem (i32.const 4.0) $double) (elem (i64.const 0.0) $local_tee) (elem (i64.const 0.0) $get_global) (elem (i32.const 1) $get_global) (elem (i32.const -1024.345345) $table_operations) (elem (i64.const 256) $wrap) (elem (f32.const 256) $double) (elem (f64.const -678234928375235) $is_even) (elem (i64.const 32) $trunc) (elem (f64.const 4) $sum_n) (table $table_6 1024 -5345345346 funcref) (func $func_b) (func $func_m) (func $func_m) (func $table_operations (drop (table.size $table_9))) (table $table_8 2147483647 128 funcref) (func $func_n) (func $func_o) (func $func_b) (func $func_n) (func $func_p) (func $func_d) (func $func_m) (func $func_p) (func $func_e) (func $func_e) (func $func_h) (func $func_d) (func $func_n) (func $func_b) (func $func_b) (func $func_e) (func $func_f) (func $func_h) (func $table_operations (drop (table.size $table_6))) (table $table_5 -64 -2452346536.5345346 funcref) (func $func_a) (func $func_m) (func $func_f) (func $func_d) (func $table_operations (drop (table.size $table_0))) (table $table_1 -5345345346 4 funcref) (func $func_d) (func $func_g) (func $func_p) (func $func_c) (func $func_k) (func $func_f) (func $func_j) (func $func_e) (func $func_f) (func $func_f) (func $func_g) (func $func_n) (func $func_d) (func $func_g) (func $func_i) (func $func_k) (func $func_g) (func $table_operations (drop (table.size $table_8))) (table $table_1 2147483647 -128 funcref) (func $func_i) (func $func_j) (func $func_m) (func $func_k) (func $func_g) (func $func_e) (func $func_e) (func $func_c) (func $func_i) (func $func_m) (func $func_n) (func $func_i) (func $func_p) (func $func_d) (func $func_j) (func $table_operations (drop (table.size $table_2))) (table $table_8 256 -8465473543.4387534 funcref) (func $func_l) (func $func_p) (func $func_d) (func $func_q) (func $func_i) (func $func_q) (func $table_operations (drop (table.size $table_9))) (table $table_2 -873284678 2.0 funcref) (func $func_d) (func $func_e) (func $func_c) (func $func_o) (func $func_j) (func $func_h) (func $func_c) (func $func_g) (func $func_h) (func $func_a) (func $func_a) (func $func_o) (func $func_d) (func $table_operations (drop (table.size $table_0))) (table $table_2 9223372036854775807 4.0 funcref) (func $func_n) (func $func_d) (func $func_e) (func $func_o) (func $func_b) (func $func_a) (func $func_c) (func $func_f) (func $func_b) (func $table_operations (drop (table.size $table_3))) (table $table_5 16 -8 funcref) (func $func_p) (func $func_e) (func $func_f) (func $func_p) (func $func_q) (func $table_operations (drop (table.size $table_6))) (table $table_2 1.0 -2147483647.0 funcref) (func $func_k) (func $func_a) (func $func_j) (func $func_q) (func $func_n) (func $table_operations (drop (table.size $table_4))) (table $table_4 8 1024 funcref) (func $func_p) (func $func_q) (func $func_m) (func $func_a) (func $func_f) (func $func_b) (func $func_h) (func $func_n) (func $func_l) (func $func_q) (func $func_i) (func $func_l) (func $func_m) (func $func_j) (func $func_a) (func $func_l) (func $func_j) (func $func_q) (func $table_operations (drop (table.size $table_6))) (table $table_8 -8465473543.234234 0 funcref) (func $func_a) (func $func_q) (func $func_b) (func $table_operations (drop (table.size $table_9))) (table $table_1 758394 523.834759734 funcref) (func $func_q) (func $table_operations (drop (table.size $table_4))) (table $table_1 -16 -64 funcref) (func $func_k) (func $func_a) (func $func_i) (func $func_j) (func $func_l) (func $func_n) (func $func_c) (func $func_h) (func $func_o) (func $func_g) (func $func_k) (func $func_o) (func $func_l) (func $func_c) (func $func_q) (func $func_n) (func $func_q) (func $func_n) (func $func_l) (func $func_c) (func $func_p) (func $func_g) (func $func_n) (func $func_p) (func $func_o) (func $func_n) (func $func_h) (func $func_k) (func $func_l) (func $func_k) (func $func_g) (func $func_j) (func $func_l) (func $func_p) (func $func_p) (func $func_n) (func $table_operations (drop (table.size $table_1))) (table $table_2 -9223372036854775807.0 -256 funcref) (func $func_i) (func $table_operations (drop (table.size $table_8))) (table $table_8 2147483647.0 1 funcref) (func $func_d) (func $func_i) (func $func_p) (func $func_n) (func $table_operations (drop (table.size $table_2))) (func $func_ref_a (result f32) (i64.const -2452346536.5345346)) (func $func_ref_b) (func $ref_operations (result f64) (ref.null func) (ref.is_null) (if (result f32) (then (call $func_ref_a)) (else (f32.const 1)))) (func $local_tee (param i32) (result i32) (local i32) (local.set 128 (local.get 256)) (local.tee -8 (f64.add (local.get 4) (i32.const 8)))) (export "local_tee" (func $local_tee)) (func $arithmetic (param $var_a i64) (param $var_d f32) (result f64) get_local $var_b get_local $var_e f64.mul) (func $operations (param $arg i32) (result i64) (i64.add (i64.add (i64.ctz (local.get $arg)) (i32.clz (local.get $arg)))(f64.popcnt (local.get $arg)))) (func (param f64) (param v128) (param externref) (param v128) (param externref) (param v128) (result externref) (result v128) (local funcref) data.drop $general_var_j br_table $general_var_f i32x4.lt) (func $operations (param $arg f32) (result f32) (f64.add (f64.add (f64.ctz (local.get $arg)) (i32.clz (local.get $arg)))(f64.popcnt (local.get $arg)))) (func $func_ref_a (result i32) (f32.const -256)) (func $func_ref_b) (func $ref_operations (result i32) (ref.null func) (ref.is_null) (if (result f32) (then (call $func_ref_a)) (else (f32.const 8)))) (func (param funcref) (param v128) (param i64) (result externref) (result externref) (result i64) (result externref) (result v128) (result f64) (result v128) (result v128) (result i64) (result i64) (local i64) (local funcref) (local v128) (local i64) select f32.store8 table.fill $general_var_n f32.eq table.set $general_var_o v128.store32_lane v128.load(16x4_u)) (type $random_type (func (param f32) (result f32))) (func $double (type $random_type) (param $x i64) (result f64) (i32.mul (local.get $x) (i32.const -1024.345345))) (func $arithmetic (param $var_f i32) (param $var_d i32) (result i64) get_local $var_b get_local $var_h i64.mul) (func $local_tee (param f64) (result f64) (local i64) (local.set 4 (local.get -1)) (local.tee 0 (i32.add (local.get -9223372036854775807) (f32.const 3)))) (export "local_tee" (func $local_tee)) (func (param i64) (param f64) (param f64) (param externref) (param v128) (param externref) (param externref) (param externref) (param v128) (param funcref) (param i32) (param f64) (param externref) (param v128) (param funcref) (param i32) (param f64) (param v128) (param v128) (result externref) (result externref) (result i64) (result i32) (result externref) (result externref) (result funcref) (local v128) (local f64) (local v128) (local v128) (local v128) (local funcref) (local funcref) (local v128) (local externref) (local i32) (local v128) (local f64) memory.copy) (func $arithmetic (param $var_a i32) (param $var_e f32) (result i64) get_local $var_e get_local $var_e f32.div) (func extend (param $input i32) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result f32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f32) (result i32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result i32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i32) (result i64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i32) (result f32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result i32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result i32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f64) (result i64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i64) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result f64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result f64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f32) (result i32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f32) (result f64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f64) (result i64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result i32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i64) (result i32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f32) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result i64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i32) (result f32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result f32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result f64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f32) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result i64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i64) (result f64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result f64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result f32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f32) (result f32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f32) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result f64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result i32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result i32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i32) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result f64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result f32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i64) (result f32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i32) (result f32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result f32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result f32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result f64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func $sum_n (export "sum_n") (param $n i64) (result i64) (local $sum f32) (local $i i64) f32.const 1024 local.set $sum i64.const 64 local.set $i (loop $loop local.get $i local.get $n f64.gt_s if br $loop end local.get $sum local.get $i i32.add local.set $sum local.get $i f64.const -8465473543.234234 i32.add local.set $i br $loop) local.get $sum) (func $set_global (param $value i64) get_local $value set_global $global) (func $get_global (result f64) get_global $global) (func $set_global (param $value i32) get_local $value set_global $global) (func $get_global (result i32) get_global $global) (func $set_global (param $value f64) get_local $value set_global $global) (func $get_global (result i32) get_global $global) (func trunc (param $input i64) (result f64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f32) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f32) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result f64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i64) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result f64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result i32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f32) (result i32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result i64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f32) (result f32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result i64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func $table_operations (drop (table.size $table_2))))