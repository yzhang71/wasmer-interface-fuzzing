(module (global $globalname_a (mut f64) f32.const 32) (global $globalname_g (mut i32) i64.const 989234678) (memory $mem 512) (data (i32.const 64) "®🦀🏰Olá🐾🦜Привет🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly！") (func $mem_func (local $mem_size i32) (local $mem_grow f32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const 256))) (memory.fill (f32.const 9223372036854775807) (i64.const 3.0) (i32.const 1)) (memory.copy (f32.const 4) (i64.const 989234678) (i64.const -5345345346)) (memory.init -512 (i32.const 128) (i64.const 3) (f32.const 32))) (data (i32.const -5345345346) "🌀📂🎯Hello, Привет, мир!!こんにちは、WebAssembly📝🌀📂ℹ️🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut⬇️📂") (elem (f64.const 4.0) $sum_n) (elem (f64.const -2147483647.0) $is_even) (elem (i64.const 512) $ref_operations) (elem (i32.const 1024) $double) (elem (i32.const 2147483647.0) $trunc) (elem (i64.const -2452346536.5345346) $get_global) (elem (i64.const -8465473543.234234) $local_tee) (elem (i64.const -8465473543.234234) $extend) (elem (f64.const 256) $load_value) (elem (f64.const -512) $double) (elem (f32.const -8) $double) (table $table_5 -256 128 funcref) (func $func_o) (func $func_b) (func $func_j) (func $func_d) (func $func_l) (func $func_e) (func $func_q) (func $func_n) (func $table_operations (drop (table.size $table_2))) (func $func_ref_a (result i64) (f32.const -873284678)) (func $func_ref_b) (func $ref_operations (result f64) (ref.null func) (ref.is_null) (if (result f64) (then (call $func_ref_a)) (else (i32.const -16)))) (memory 64) (export "memory" (memory 2147483647.0)) (func $store_num (f32.store (f64.const 64) (i64.const 1.0))) (start $store_num) (func $func_ref_a (result i32) (f64.const -2452346536.5345346)) (func $func_ref_b) (func $ref_operations (result i32) (ref.null func) (ref.is_null) (if (result i64) (then (call $func_ref_a)) (else (i64.const 9223372036854775807)))) (func $is_even (param $var_b i64) (result f32) (local $rem f32) (set_local $rem (i64.rem_u (get_local $var_g) (f64.const 1))) (i32.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func (param i32) (param funcref) (param externref) (param i32) (param v128) (param funcref) (param v128) (param f32) (param externref) (param externref) (param funcref) (param externref) (param i32) (param f32) (param v128) (param v128) (param funcref) (param v128) (param i64) (param v128) (param f32) (param v128) (param v128) (result f32) (result f32) (result f64) (result externref) (result funcref) (result externref) (result funcref) (result funcref) (result f64) (result i64) (result funcref) (result i64) (local v128) (local f64) (local v128) (local v128) (local v128) i64.load(32_s) v128.store32_lane drop i32.load(16_u) memory.init $general_var_k i32.ne f64.sub memory.fill memory.grow f64.load(32_u) i32.store16 v128.load64_splat) global.get $general_var_l local.get $general_var_o elem.drop $general_var_j table.init $general_var_g $general_var_d table.get $general_var_b ref.is_null extern i8x16.neg v128.store f32x4.splat drop f32.store16 v128.load64_splat) table.grow $general_var_k ref.func $general_var_a memory.fill) (func $arithmetic (param $var_e f64) (param $var_g f64) (result f64) get_local $var_f get_local $var_c f64.add))