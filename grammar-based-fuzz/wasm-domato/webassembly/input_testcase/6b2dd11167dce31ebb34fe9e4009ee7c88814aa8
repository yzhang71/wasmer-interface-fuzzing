(module (type $func_i64_i64 (func (param i64) (result i64))) (func $double_i64 (type $func_i64_i64) (param $x i64) (result i64) (i64.mul (local.get $x) (i64.const 0))) (type $func_i64_i64 (func (param i64) (result i64))) (func $double_i64 (type $func_i64_i64) (param $x i64) (result i64) (i64.mul (local.get $x) (i64.const 0))) (func $func_f) (table $table_1 0 funcref) (func $table_operations (drop (table.size $table_1))) (func $wrap (param $input i64) (result i32) (i32.wrap_i64 (local.get $input))) (func $extend (param $input i32) (result i32) (i32.extend8_s (local.get $input))) (func $trunc (param $input f64) (result i32) (i32.trunc_f64_s (local.get $input))) (export "wrap" (func $wrap)) (export "extend" (func $extend)) (export "trunc" (func $trunc)) (type $func_i64_i64 (func (param i64) (result i64))) (func $double_i64 (type $func_i64_i64) (param $x i64) (result i64) (i64.mul (local.get $x) (i64.const 0))) (func $set_global (param $value i32) get_local $value set_global $globalname_e) (func $get_global (result i32) get_global $globalname_a) (func $arithmetic (param $var_g f64) (param $var_h f64) (result f64) get_local $var_g get_local $var_h f64.mul) (global $globalname_a (mut i32) i32.const 0) (global $globalname_b (mut i64) i64.const 9223372036854775807) (global $globalname_c (mut f32) f32.const 4.0) (global $globalname_d (mut f64) f64.const 4.0) (global $globalname_e (mut i32) i32.const 1024) (global $globalname_f (mut i64) i64.const 4) (global $globalname_g (mut f32) f32.const 2147483647.0) (global $globalname_h (mut f64) f64.const 1.0) (func $set_global (param $value f32) get_local $value set_global $globalname_g) (func $get_global (result f32) get_global $globalname_c) (func $arithmetic (param $var_c i64) (param $var_d i64) (result i64) get_local $var_c get_local $var_d i64.sub) (func $store_value (param $address i32) (param $value f64) (f64.store (get_local $address) (get_local $value))) (func $load_value (param $address i32) (result f64) (f64.load (get_local $address))) (func $store_value (param $address i32) (param $value f32) (f32.store (get_local $address) (get_local $value))) (func $load_value (param $address i32) (result f32) (f32.load (get_local $address))))