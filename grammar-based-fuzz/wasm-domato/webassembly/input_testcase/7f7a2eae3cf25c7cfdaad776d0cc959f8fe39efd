(module (global $globalname_d (mut f64) i32.const -128) (global $globalname_b (mut f64) f32.const -9223372036854775807.0) (memory $mem 989234678) (data (f64.const 4.0) "こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAssembly！") (func $mem_func (local $mem_size f32) (local $mem_grow f64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const -2452346536.5345346))) (memory.fill (f32.const -64) (f64.const -2452346536.5345346) (i32.const -256)) (memory.copy (i64.const -256) (f64.const 9223372036854775807) (i32.const -873284678)) (memory.init 1024 (f32.const 512) (f32.const 2.0) (f64.const 4))) (data (i64.const -16) "👯⛔🏃‍♀️✨📦📂🐑🌀Привет, мир!📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C🌀📂") (data (i32.const 8) "🐑🌀Привет, мир!📂Hello, !こんにちは、WebAssembly🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🐑") (data (f64.const -678234928375235) "こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌐CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTag👯⛔こんにちは、こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯🌲🌳🌱🌰WebAssembly！") (elem (f64.const 4) $double) (elem (i32.const 4) $extend) (elem (f32.const -8465473543.234234) $table_operations) (elem (f64.const -1) $arithmetic) (elem (f32.const -16) $load_value) (elem (f64.const -9223372036854775807) $is_even) (elem (i64.const 3) $store_num) (elem (f64.const 4) $trunc) (elem (i32.const 52346654) $extend) (elem (f64.const -16) $arithmetic) (table $table_1 1024 4 funcref) (func $func_c) (func $func_j) (func $func_b) (func $func_i) (func $func_c) (func $func_p) (func $func_q) (func $table_operations (drop (table.size $table_7))) (func (param funcref) (param externref) (param externref) (param externref) (param v128) (param funcref) (param i32) (param funcref) (param v128) (param v128) (param f64) (param i32) (param v128) (param v128) (param externref) (result externref) (result i64) (result f64) (result funcref) (result i64) (result v128) (result i64) (result v128) (result v128) (result i32) (local v128) (local v128) (local i64) (local i32) (local v128) (local i64) (local externref) i32.ne call_indirect (param v128) (param i64) (param v128) (param i64) (param i64) (param v128) (param v128) (param externref) (param funcref) (param v128) (param i64) (param externref) (param v128) (result i64) (result i32) (result f32) (result i64) (result v128) (result v128) (result f32) (result i32) (result v128) (result funcref) (result funcref) (result v128) (result i64) (result externref) select) (type $random_type (func (param f64) (result f32))) (func $double (type $random_type) (param $x f64) (result i32) (f32.mul (local.get $x) (i64.const 3))) (func $load_value (param $address f64) (result f64) (f32.load (get_local $address))) (export "load_value" (func $load_value)) (func $operations (param $arg f32) (result i64) (i64.add (f64.add (i64.ctz (local.get $arg)) (f64.clz (local.get $arg)))(f32.popcnt (local.get $arg)))) (func $is_even (param $var_c i64) (result f32) (local $rem f64) (set_local $rem (i32.rem_u (get_local $var_g) (f64.const 758394))) (f64.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func $table_operations (drop (table.size $table_6))) (func extend (param $input i32) (result f32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result f64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result i32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i64) (result f32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f64) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result f64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result f32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i32) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func $set_global (param $value f32) get_local $value set_global $global) (func $get_global (result i64) get_global $global) (func $operations (param $arg i64) (result f64) (f32.add (f32.add (i64.ctz (local.get $arg)) (f32.clz (local.get $arg)))(f32.popcnt (local.get $arg)))) (func $sum_n (export "sum_n") (param $n i64) (result i32) (local $sum f64) (local $i i64) f32.const 523.834759734 local.set $sum i64.const -2452346536.5345346 local.set $i (loop $loop local.get $i local.get $n i32.gt_s if br $loop end local.get $sum local.get $i f32.add local.set $sum local.get $i f32.const 0.0 i32.add local.set $i br $loop) local.get $sum) (type $random_type (func (param f64) (result f64))) (func $double (type $random_type) (param $x f32) (result i64) (f32.mul (local.get $x) (f64.const -2452346536.5345346))) (func $sum_n (export "sum_n") (param $n i64) (result i64) (local $sum f32) (local $i i32) f64.const 9223372036854775807 local.set $sum i32.const 9223372036854775807.0 local.set $i (loop $loop local.get $i local.get $n f64.gt_s if br $loop end local.get $sum local.get $i f32.add local.set $sum local.get $i f64.const -8465473543.4387534 i32.add local.set $i br $loop) local.get $sum) (func $local_tee (param i64) (result i64) (local f32) (local.set 989234678 (local.get -256)) (local.tee 2147483647.0 (f64.add (local.get 3.0) (i32.const 128)))) (func $operations (param $arg f32) (result i64) (i32.add (i32.add (f32.ctz (local.get $arg)) (i64.clz (local.get $arg)))(f64.popcnt (local.get $arg)))) (func $mem_func (local $mem_size f64) (local $mem_grow i64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i32.const -16))) (memory.fill (f64.const -32) (f32.const 0.0) (i32.const 9223372036854775807)) (memory.copy (i32.const 1.0) (f64.const 128) (i64.const -9223372036854775807.0)) (memory.init 16 (f64.const 1.0) (f32.const 128) (i32.const 9223372036854775807.0))) (func $mem_func (local $mem_size i32) (local $mem_grow i64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i64.const 0.0))) (memory.fill (i64.const -256) (i64.const 3.0) (f32.const -256)) (memory.copy (f64.const 16) (i32.const 523.834759734) (f32.const -5345345346)) (memory.init 8 (i64.const 8) (i32.const 0) (f32.const 32))) (func $mem_func (local $mem_size f32) (local $mem_grow i64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i32.const -256))) (memory.fill (f64.const 32) (i32.const 2.0) (f32.const -64)) (memory.copy (f32.const -256) (i64.const -2147483647.0) (i32.const 52346654)) (memory.init 1024 (i32.const 16) (f64.const 128) (f64.const 1024))) (func $mem_func (local $mem_size i32) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f64.const -16))) (memory.fill (i64.const 4) (f64.const 2.0) (f64.const 128)) (memory.copy (f64.const 3.0) (f32.const -512) (i32.const -32)) (memory.init 64 (f32.const -2452346536.5345346) (f64.const 2.0) (i64.const 4))) (func $sum_n (export "sum_n") (param $n f64) (result f32) (local $sum f32) (local $i f64) f64.const -128 local.set $sum i32.const 8 local.set $i (loop $loop local.get $i local.get $n f64.gt_s if br $loop end local.get $sum local.get $i i32.add local.set $sum local.get $i i32.const -64 f64.add local.set $i br $loop) local.get $sum))