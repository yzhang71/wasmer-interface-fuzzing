(module (global $globalname_g (mut f64) f32.const 3.0) (global $globalname_b (mut f64) f32.const -9223372036854775807.0) (global $globalname_h (mut i64) i64.const -16) (global $globalname_d (mut i64) i64.const -5345345346) (memory $mem 4.0) (data (i32.const -32) "👯⛔🏃‍♀️✨📦📂🐑🌀Привет, мир!📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C🌀📂") (func $mem_func (local $mem_size f32) (local $mem_grow f64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const 1))) (memory.fill (f32.const -1) (i32.const 256) (f32.const 1024)) (memory.copy (f32.const 256) (i32.const -2452346536.5345346) (f32.const 3)) (memory.init -2147483647.0 (i32.const -8465473543.4387534) (f64.const 9223372036854775807) (f32.const 0.0))) (data (f32.const 0) "🌀📂🎯📝⬇️🏃‍♀️✨📦📂📝⬇️Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAsse📂") (data (i64.const 0.0) "Hello, WebAssembly!こんにちは、WebAssembly！こんにちは🌸你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑🥝🥥🥒🥔🥕세요🌺Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌ਸਤਸ੍ਰੀਅਕਾਲ🌄") (data (i32.const 9223372036854775807) "👯⛔🏃‍♀️✨📦📂🐑🌀Привет, мир!📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C🌀📂") (data (f64.const 4) "こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAssembly！") (data (f32.const 8) "にちは🌀🏃‍♀️✨🐑🌀Привет, мир!📂📦📂🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C📝⬇️🏃‍♀️📂") (data (i32.const 0.0) "🌀🏃‍♀️✨📦📂🐑🌀ПрПривет🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹ивет, мтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับир!📂📝⬇️🏃‍♀️📂🦀") (elem (i64.const 0.0) $operations) (elem (i32.const -2452346536.5345346) $double) (elem (f32.const -2147483647.0) $wrap) (elem (i64.const -16) $store_num) (elem (i64.const 16) $store_value) (elem (f32.const 16) $trunc) (elem (i64.const -8465473543.234234) $operations) (elem (i32.const -1024.345345) $ref_operations) (elem (i32.const 1024) $arithmetic) (elem (f32.const -678234928375235) $double) (elem (i64.const 4) $operations) (elem (f64.const 523.834759734) $operations) (elem (f32.const -9223372036854775807.0) $load_value) (table $table_6 -8465473543.4387534 -8465473543.234234 funcref) (func $func_c) (func $func_c) (func $table_operations (drop (table.size $table_5))) (table $table_2 989234678 -128 funcref) (func $func_h) (func $func_q) (func $table_operations (drop (table.size $table_8))) (table $table_5 128 52346654 funcref) (func $func_j) (func $func_c) (func $func_m) (func $func_m) (func $func_p) (func $func_e) (func $func_e) (func $func_k) (func $table_operations (drop (table.size $table_9))) (func $mem_func (local $mem_size i32) (local $mem_grow f64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i32.const 32))) (memory.fill (f32.const -873284678) (i32.const -5345345346) (i32.const 9223372036854775807.0)) (memory.copy (i32.const 9223372036854775807.0) (f64.const -9223372036854775807.0) (i64.const 8)) (memory.init -64 (f64.const 989234678) (i32.const 1.0) (i32.const 1024))) (func $load_value (param $address i64) (result i32) (f64.load (get_local $address))) (export "load_value" (func $load_value)) (func $is_even (param $var_d f64) (result f64) (local $rem f64) (set_local $rem (f64.rem_u (get_local $var_c) (i32.const 9223372036854775807))) (f64.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func $is_even (param $var_c i32) (result i32) (local $rem i64) (set_local $rem (i32.rem_u (get_local $var_f) (i32.const 8))) (i32.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func $store_value (param $address i64) (param $value i64) (i64.store (get_local $address) (get_local $value))) (export "store_value" (func $store_value)) (func $mem_func (local $mem_size i32) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i64.const 0))) (memory.fill (i32.const -9223372036854775807.0) (f32.const 758394) (i32.const 0)) (memory.copy (f32.const 256) (i64.const 2.0) (f32.const 9223372036854775807.0)) (memory.init -128 (i64.const -2147483647.0) (i64.const -1) (i64.const 0.0))) (func $is_even (param $var_d f64) (result f32) (local $rem i32) (set_local $rem (i64.rem_u (get_local $var_d) (f32.const 2147483647.0))) (f32.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func $mem_func (local $mem_size f32) (local $mem_grow i64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f64.const -256))) (memory.fill (i32.const 32) (f32.const 1024) (f64.const -1)) (memory.copy (i32.const 0.0) (f32.const -8465473543.4387534) (f32.const 3.0)) (memory.init 989234678 (f32.const 9223372036854775807) (f64.const 4) (i32.const 3))) (func $operations (param $arg f64) (result i32) (i32.add (f64.add (f64.ctz (local.get $arg)) (f64.clz (local.get $arg)))(f32.popcnt (local.get $arg)))) (func $set_global (param $value f32) get_local $value set_global $global) (func $get_global (result f64) get_global $global) (func $local_tee (param i32) (result i32) (local i64) (local.set 256 (local.get -2147483647.0)) (local.tee 2.0 (i64.add (local.get 4.0) (i64.const -1024.345345)))) (func $operations (param $arg i32) (result f32) (i32.add (i64.add (i32.ctz (local.get $arg)) (f32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (func $sum_n (export "sum_n") (param $n i64) (result f64) (local $sum i64) (local $i f32) i64.const 1.0 local.set $sum f32.const 4 local.set $i (loop $loop local.get $i local.get $n i64.gt_s if br $loop end local.get $sum local.get $i i64.add local.set $sum local.get $i i32.const 523.834759734 f64.add local.set $i br $loop) local.get $sum) (func $func_ref_a (result i64) (f32.const 2147483647.0)) (func $func_ref_b) (func $ref_operations (result f64) (ref.null func) (ref.is_null) (if (result i64) (then (call $func_ref_a)) (else (i32.const -873284678)))) (func $local_tee (param i64) (result i32) (local i32) (local.set -2452346536.5345346 (local.get 0)) (local.tee 2.0 (i32.add (local.get 1.0) (i32.const 512)))) (func $load_value (param $address f32) (result i64) (f64.load (get_local $address))) (export "load_value" (func $load_value)) (func $mem_func (local $mem_size i32) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i32.const -256))) (memory.fill (i32.const 9223372036854775807) (f32.const -64) (f64.const 16)) (memory.copy (i64.const 4) (i32.const -8) (i32.const 64)) (memory.init 64 (i32.const 8) (f64.const -2147483647.0) (i32.const 523.834759734))) (type $random_type (func (param f64) (result i32))) (func $double (type $random_type) (param $x i32) (result i32) (i64.mul (local.get $x) (i32.const -8))))