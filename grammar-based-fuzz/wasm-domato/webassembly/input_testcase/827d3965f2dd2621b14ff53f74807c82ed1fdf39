(module (global $globalname_g (mut f32) i64.const -1) (global $globalname_a (mut f32) i64.const 9223372036854775807) (global $globalname_e (mut f64) f64.const 32) (global $globalname_b (mut f32) i32.const -2147483647.0) (global $globalname_d (mut f64) i32.const 52346654) (global $globalname_g (mut f64) f64.const 3) (global $globalname_h (mut f32) f64.const 3.0) (global $globalname_h (mut i32) f32.const -32) (global $globalname_g (mut i32) f64.const 52346654) (global $globalname_c (mut i32) f64.const -873284678) (memory $mem -1024.345345) (data (i32.const 32) "🌀📂ПриветnjourHolaש🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾לוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🚀CiaoGutenTagこん, мир!ℹ️") (func $mem_func (local $mem_size f32) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i64.const 512))) (memory.fill (f32.const -2452346536.5345346) (i32.const -9223372036854775807.0) (f64.const -5345345346)) (memory.copy (i64.const 0) (f64.const 16) (i32.const 4)) (memory.init 2.0 (i64.const 3) (f64.const 4.0) (f32.const -873284678))) (data (f32.const 64) "🌀📂ПриветnjourHolaש🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾לוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🚀CiaoGutenTagこん, мир!ℹ️") (data (i64.const 3) "🌀📂🎯🐑🌀Привет, こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌎CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌐CiaoGutenTagмир!📂📝⬇️🏃‍♀️✨📦📂📝⬇️🏃‍♀️✨📦") (elem (f32.const 0) $extend) (elem (f64.const -8) $table_operations) (elem (i64.const 128) $store_value) (elem (i64.const 16) $local_tee) (elem (f64.const -128) $store_value) (elem (f64.const 2.0) $wrap) (elem (f32.const 1) $store_value) (elem (i64.const 1024) $get_global) (elem (i32.const 989234678) $trunc) (elem (i64.const -32) $load_value) (table $table_0 2.0 4.0 funcref) (func $func_b) (func $func_l) (func $func_e) (func $table_operations (drop (table.size $table_4))) (func $mem_func (local $mem_size f32) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f64.const -8))) (memory.fill (f32.const 256) (i64.const -512) (i32.const 64)) (memory.copy (i32.const 1.0) (i64.const 256) (f64.const -256)) (memory.init 989234678 (i32.const -678234928375235) (f64.const 3) (i64.const -512))) (memory 1024) (export "memory" (memory -5345345346)) (func $store_num (f32.store (i64.const 989234678) (i32.const 8))) (start $store_num) (memory 989234678) (export "memory" (memory -8465473543.234234)) (func $store_num (f64.store (i64.const 2147483647.0) (f32.const 52346654))) (start $store_num) (func $is_even (param $var_d f32) (result i32) (local $rem i32) (set_local $rem (f32.rem_u (get_local $var_f) (i64.const -8465473543.234234))) (f64.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func $sum_n (export "sum_n") (param $n i32) (result f64) (local $sum i32) (local $i i32) f32.const 128 local.set $sum f64.const 52346654 local.set $i (loop $loop local.get $i local.get $n f32.gt_s if br $loop end local.get $sum local.get $i i32.add local.set $sum local.get $i f64.const -1024.345345 i32.add local.set $i br $loop) local.get $sum) (func $store_value (param $address f32) (param $value f32) (f32.store (get_local $address) (get_local $value))) (export "store_value" (func $store_value)) (func $is_even (param $var_b f32) (result f64) (local $rem f64) (set_local $rem (f64.rem_u (get_local $var_e) (i32.const -873284678))) (i32.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func (param externref) (param v128) (param v128) (result v128) (result v128) (result f64) (result funcref) (result funcref) (result f32) (result externref) (local funcref) (local externref) (local v128) (local i32) (local f32) (local v128) (local f64) (local i64) (local i64) (local i32) (local externref) (local funcref) (local v128) i64.load(8_s) v128.bitselect table.grow $general_var_g f32.load(32_s) memory.fill i64.trunc_i32 i64x2.trunc_sat_i8x16_u v128.load(16x4_s) f64.load(16_u) v128.neg table.get $general_var_f br_if $general_var_h v128.load(32x2_s) i64.extend_i64_s v128.load8_zero) v128.load32_zero) v128.store64_lane f32x4.neg data.drop $general_var_k v128.ne table.copy $general_var_c $general_var_b) (type $random_type (func (param i64) (result f64))) (func $double (type $random_type) (param $x i32) (result i64) (f64.mul (local.get $x) (i32.const 2147483647))) (func $mem_func (local $mem_size f64) (local $mem_grow f64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f64.const 8))) (memory.fill (f64.const 2147483647) (f64.const 0) (i32.const -128)) (memory.copy (f32.const -2147483647.0) (i32.const -678234928375235) (f32.const -678234928375235)) (memory.init 1.0 (i32.const -512) (f64.const -32) (i32.const 2.0))) (func $table_operations (drop (table.size $table_7))) (memory 4) (export "memory" (memory -8465473543.4387534)) (func $store_num (f32.store (f64.const 9223372036854775807) (i32.const 523.834759734))) (start $store_num) (func (param funcref) (param externref) (param v128) (param i32) (param i32) (param v128) (param f32) (param f64) (param f64) (param v128) (param funcref) (param funcref) (param externref) (param i64) (param v128) (result f64) (result externref) (result i32) (result v128) (result externref) (result externref) (result v128) (local v128) table.fill $general_var_e unreachable f32.load(16_s) v128.load32_zero) f32.clz f32.load(32_s) memory.grow v128.load8_lane) nop br_table $general_var_e table.fill i8x16.shr_s table.copy $general_var_l $general_var_l table.size $general_var_d i32.load(32_u) i16x8.any_true table.set $general_var_f table.size $general_var_e i64x2.ne v128.splat table.init $general_var_d $general_var_c i32.const -256 local.tee $general_var_i i64x2.bitmask f64.eqz memory.init $general_var_o v128.load64_splat) call $general_var_h f32.const 523.834759734 i32.const -2147483647.0 f64.extend_i32 f32x4.eq local.tee $general_var_b ref.null func) (func $is_even (param $var_a i32) (result i64) (local $rem f64) (set_local $rem (f64.rem_u (get_local $var_d) (i32.const -16))) (i32.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func $is_even (param $var_g i32) (result i32) (local $rem f32) (set_local $rem (i32.rem_u (get_local $var_f) (i64.const 512))) (f32.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func trunc (param $input i32) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result f32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result f32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func $set_global (param $value i32) get_local $value set_global $global) (func $get_global (result i32) get_global $global) (func $load_value (param $address f64) (result i64) (f32.load (get_local $address))) (export "load_value" (func $load_value)) (memory -64) (export "memory" (memory 512)) (func $store_num (i32.store (i32.const 512) (i32.const 758394))) (start $store_num))