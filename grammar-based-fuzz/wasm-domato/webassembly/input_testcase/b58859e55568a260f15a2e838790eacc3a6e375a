(module (global $globalname_f (mut i64) i32.const -5345345346) (global $globalname_b (mut f32) f64.const 1024) (global $globalname_h (mut i32) i64.const 989234678) (global $globalname_c (mut i64) f32.const -512) (global $globalname_e (mut f64) i32.const 0) (global $globalname_c (mut i64) f32.const 2147483647) (memory $mem 52346654) (data (f64.const 1024) "Hello, WebAssembly!こんにちは、WebAssembly！こんにちは🌸你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑🥝🥥🥒🥔🥕세요🌺Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌ਸਤਸ੍ਰੀਅਕਾਲ🌄") (func $mem_func (local $mem_size i32) (local $mem_grow f64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f64.const 3.0))) (memory.fill (f32.const -2452346536.5345346) (f64.const 256) (f64.const 512)) (memory.copy (f64.const -512) (f32.const 4.0) (f64.const -5345345346)) (memory.init 256 (i64.const 758394) (f64.const -2147483647.0) (f64.const 9223372036854775807.0))) (data (i64.const -32) "🌀⬇️🏃‍♀️✨Hell🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Bueno🌳🌱🌰🌻🌼🌷o, Привет, мир!!こんにちは、WebAssembly📦📂") (data (i32.const 16) "👯🏃‍♀️✨📦📂📝⬇️⛔🏃‍♀️🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにち🥝🥥🥒🥔🥕✨📦📂📝⬇️🌀📂") (data (f64.const -873284678) "👯⛔🏃‍♀️✨📦📂🐑🌀Привет, мир!📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C🌀📂") (data (i64.const 523.834759734) "こんにちは안녕하세요你好🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלום🐑🌀Привет, мир!📂⚠️") (data (f32.const 1.0) "こんにちは、WebAssembly！🌞Grüßgott🦉🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑🥝🥥🥒🥔🥕세요🌺Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครั🍒🍓🥑🥝🥥🥒🥔🥕🥨") (data (f32.const 2.0) "🌀📂🎯📝⬇️🏃‍♀️✨📦📂📝⬇️Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAsse📂") (data (i64.const 512) "にちは🌀🏃‍♀️✨📦📂📝⬇️🏃‍♀️🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly📂") (data (i32.const 9223372036854775807.0) "👯⛔🏃‍♀️✨📦📂🐑🌀Привет, мир!📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C🌀📂") (data (f64.const -512) "🌀📂🎯Hello, Привет, мир!!こんにちは、WebAssembly📝🌀📂ℹ️🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut⬇️📂") (data (f32.const 0.0) "®🦀🏰Olá🐾🦜Привет🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly！") (data (f64.const -9223372036854775807) "🌀📂🎯🐑🌀Привет, こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌎CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌐CiaoGutenTagмир!📂📝⬇️🏃‍♀️✨📦📂📝⬇️🏃‍♀️✨📦") (data (f32.const -8465473543.4387534) "こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌐CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTag👯⛔こんにちは、こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯🌲🌳🌱🌰WebAssembly！") (data (i32.const 0) "🌀📂🎯📝⬇️🏃‍♀️✨📦📂📝⬇️Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAsse📂") (data (f64.const -16) "こんにちは안녕하세요你好🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלום🐑🌀Привет, мир!📂⚠️") (elem (f32.const 1024) $arithmetic) (elem (f64.const 2147483647) $table_operations) (table $table_6 256 4 funcref) (func $func_q) (func $func_l) (func $func_b) (func $func_o) (func $func_e) (func $func_m) (func $func_e) (func $func_m) (func $func_j) (func $func_m) (func $func_k) (func $func_m) (func $table_operations (drop (table.size $table_7))) (table $table_1 2147483647.0 -128 funcref) (func $func_m) (func $func_k) (func $func_n) (func $func_c) (func $func_o) (func $func_i) (func $table_operations (drop (table.size $table_8))) (table $table_0 -128 523.834759734 funcref) (func $func_m) (func $func_c) (func $func_q) (func $func_p) (func $func_i) (func $func_p) (func $func_c) (func $table_operations (drop (table.size $table_9))) (table $table_2 1024 -5345345346 funcref) (func $func_i) (func $func_d) (func $func_l) (func $func_m) (func $func_a) (func $func_m) (func $func_l) (func $func_d) (func $func_e) (func $func_i) (func $func_j) (func $func_e) (func $func_a) (func $table_operations (drop (table.size $table_1))) (table $table_0 9223372036854775807 758394 funcref) (func $func_a) (func $func_l) (func $func_e) (func $func_o) (func $func_g) (func $func_a) (func $func_k) (func $func_l) (func $func_g) (func $func_d) (func $func_k) (func $func_l) (func $func_g) (func $table_operations (drop (table.size $table_5))) (table $table_6 9223372036854775807.0 -2452346536.5345346 funcref) (func $func_j) (func $func_i) (func $func_m) (func $func_f) (func $func_i) (func $func_d) (func $func_j) (func $table_operations (drop (table.size $table_7))) (table $table_0 9223372036854775807 9223372036854775807.0 funcref) (func $func_f) (func $func_k) (func $func_q) (func $func_b) (func $func_i) (func $func_j) (func $func_o) (func $func_m) (func $func_h) (func $func_l) (func $func_e) (func $func_c) (func $func_c) (func $func_b) (func $func_j) (func $table_operations (drop (table.size $table_6))) (table $table_2 4.0 -1 funcref) (func $func_a) (func $func_f) (func $func_e) (func $func_k) (func $func_k) (func $func_e) (func $func_m) (func $func_l) (func $func_p) (func $func_p) (func $func_k) (func $func_p) (func $func_c) (func $func_m) (func $func_b) (func $func_g) (func $table_operations (drop (table.size $table_9))) (table $table_8 1024 1024 funcref) (func $func_j) (func $func_a) (func $func_d) (func $table_operations (drop (table.size $table_3))) (table $table_8 2147483647.0 -8465473543.4387534 funcref) (func $func_i) (func $func_j) (func $table_operations (drop (table.size $table_5))) (table $table_0 9223372036854775807 758394 funcref) (func $func_h) (func $func_h) (func $func_a) (func $func_i) (func $func_e) (func $func_m) (func $func_q) (func $func_d) (func $func_b) (func $func_n) (func $table_operations (drop (table.size $table_8))) (table $table_1 0.0 -8465473543.234234 funcref) (func $func_b) (func $func_c) (func $func_m) (func $func_j) (func $func_j) (func $func_e) (func $func_b) (func $func_g) (func $func_e) (func $func_g) (func $table_operations (drop (table.size $table_2))) (table $table_5 64 -1 funcref) (func $func_n) (func $func_q) (func $func_i) (func $table_operations (drop (table.size $table_5))) (table $table_9 -128 -32 funcref) (func $func_d) (func $func_m) (func $func_c) (func $func_p) (func $func_q) (func $func_e) (func $table_operations (drop (table.size $table_1))) (table $table_4 1024 -9223372036854775807.0 funcref) (func $func_i) (func $func_m) (func $func_m) (func $func_c) (func $func_m) (func $func_f) (func $func_h) (func $func_b) (func $func_m) (func $func_g) (func $func_a) (func $table_operations (drop (table.size $table_7))) (table $table_5 0.0 1.0 funcref) (func $func_f) (func $func_q) (func $func_f) (func $func_i) (func $func_h) (func $func_l) (func $func_m) (func $table_operations (drop (table.size $table_2))) (table $table_3 2147483647.0 4 funcref) (func $func_p) (func $func_l) (func $table_operations (drop (table.size $table_6))) (func wrap (param $input i64) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f32) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i64) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result i64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i32) (result f32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result i64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result f32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result i64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result f64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i64) (result i32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i64) (result i64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result f32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i64) (result i32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result f32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i64) (result f32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func $set_global (param $value i32) get_local $value set_global $global) (func $get_global (result i32) get_global $global) (memory 52346654) (export "memory" (memory 9223372036854775807)) (func $store_num (i64.store (f32.const 2.0) (i64.const 758394))) (start $store_num) (func $func_ref_a (result f32) (i64.const -2452346536.5345346)) (func $func_ref_b) (func $ref_operations (result f32) (ref.null func) (ref.is_null) (if (result f32) (then (call $func_ref_a)) (else (f64.const -64)))) (func $operations (param $arg i32) (result f32) (i64.add (f32.add (i32.ctz (local.get $arg)) (i32.clz (local.get $arg)))(f64.popcnt (local.get $arg)))) (func $arithmetic (param $var_f f32) (param $var_g f64) (result i64) get_local $var_e get_local $var_a f32.mul) (func $mem_func (local $mem_size f32) (local $mem_grow f64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i32.const -678234928375235))) (memory.fill (i64.const -64) (i32.const 9223372036854775807) (i32.const 16)) (memory.copy (f32.const 4) (i64.const -1024.345345) (f32.const -1)) (memory.init 2.0 (f32.const 512) (f64.const -8465473543.4387534) (i32.const -2452346536.5345346))) (func $arithmetic (param $var_d f32) (param $var_b f32) (result f64) get_local $var_h get_local $var_g i32.add) (func extend (param $input f64) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i64) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i32) (result i64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f32) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result f64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i64) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f32) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func $func_ref_a (result i64) (i32.const 1024)) (func $func_ref_b) (func $ref_operations (result f32) (ref.null func) (ref.is_null) (if (result i32) (then (call $func_ref_a)) (else (f64.const 512)))) (func trunc (param $input f64) (result f64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result f32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f32) (result f64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result f32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result f32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i32) (result f32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result i64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result f32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i32) (result f32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result i32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result i64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i64) (result f32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result f64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result i64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f32) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result f32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result i64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i64) (result i64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i32) (result f32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f32) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func $load_value (param $address i64) (result f64) (i32.load (get_local $address))) (export "load_value" (func $load_value)) (func trunc (param $input i64) (result f32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result f32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i64) (result f64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result f32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result i32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f64) (result f32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result i32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result i64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i32) (result i32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result f64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result i64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result i32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result f32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i32) (result i32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result i32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result i64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i64) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f32) (result f32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result i32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result i64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result f32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result f64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result i32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result i32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i32) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result f64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f64) (result i32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result f64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i64) (result i64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result f32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func $load_value (param $address f32) (result f64) (i32.load (get_local $address))) (export "load_value" (func $load_value)) (func $table_operations (drop (table.size $table_2))) (func $operations (param $arg f32) (result i64) (i64.add (i32.add (f64.ctz (local.get $arg)) (f64.clz (local.get $arg)))(f32.popcnt (local.get $arg)))) (func $func_ref_a (result i32) (i64.const 32)) (func $func_ref_b) (func $ref_operations (result f32) (ref.null func) (ref.is_null) (if (result f64) (then (call $func_ref_a)) (else (i64.const 2147483647)))))