(module (func $is_even (param $var_a i32) (result i32) (local $rem_i32 i32) (set_local $rem_i32 (i32.rem_u (get_local $var_a) (i32.const 2))) (i32.eqz (get_local $rem_i32))) (export "is_even" (func $is_even)) (elem (i32.const 0) $arithmetic) (elem (i32.const 0) $arithmetic) (elem (i32.const 0) $arithmetic) (func $arithmetic (param $var_g f64) (param $var_h f64) (result f64) get_local $var_g get_local $var_h f64.add) (data (i32.const 16) "ðŸ‘¯â›”") (func $arithmetic (param $var_e f32) (param $var_f f32) (result f32) get_local $var_e get_local $var_f f32.sub) (func $wrap (param $input i64) (result i32) (i32.wrap_i64 (local.get $input))) (func $extend (param $input i32) (result i32) (i32.extend8_s (local.get $input))) (func $trunc (param $input f64) (result i32) (i32.trunc_f64_s (local.get $input))) (export "wrap" (func $wrap)) (export "extend" (func $extend)) (export "trunc" (func $trunc)))