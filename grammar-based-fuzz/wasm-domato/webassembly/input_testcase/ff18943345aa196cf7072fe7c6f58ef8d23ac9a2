(module (func $set_global (param $value i64) get_local $value set_global $globalname_b) (func $get_global (result i64) get_global $globalname_f) (func $arithmetic (param $var_g f64) (param $var_h f64) (result f64) get_local $var_g get_local $var_h f64.sub) (func $set_global (param $value f32) get_local $value set_global $globalname_c) (func $get_global (result f32) get_global $globalname_c) (func $arithmetic (param $var_a i32) (param $var_b i32) (result i32) get_local $var_a get_local $var_b i32.sub) (func $operations (param $arg i32) (result i32) (i32.add (i32.add (i32.ctz (local.get $arg)) (i32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (func $func_ref_a (result i32) (i32.const 42)) (func $func_ref_b) (func $ref_operations (result i32) (ref.null func) (ref.is_null) (if (result i32) (then (call $func_ref_a)) (else (i32.const 0)))) (func $operations (param $arg i32) (result i32) (i32.add (i32.add (i32.ctz (local.get $arg)) (i32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (func $store_value (param $address i32) (param $value i32) (i32.store (get_local $address) (get_local $value))) (func $load_value (param $address i32) (result i32) (i32.load (get_local $address))) (export "store_value" (func $store_value)) (export "load_value" (func $load_value)) (memory 1) (export "memory" (memory 0)) (func $store_num (i32.store (i32.const 0) (i32.const 42))) (start $store_num) (memory 1) (export "memory" (memory 0)) (func $store_num (i32.store (i32.const 0) (i32.const 42))) (start $store_num) (elem (i32.const 0) $arithmetic) (elem (i32.const 0) $arithmetic) (elem (i32.const 0) $arithmetic) (func $operations (param $arg i32) (result i32) (i32.add (i32.add (i32.ctz (local.get $arg)) (i32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))))