(module (func $set_global (param $value f64) get_local $value set_global $globalname_d) (func $get_global (result f64) get_global $globalname_h) (func $arithmetic (param $var_a i32) (param $var_b i32) (result i32) get_local $var_a get_local $var_b i32.mul) (func $operations (param $arg i32) (result i32) (i32.add (i32.add (i32.ctz (local.get $arg)) (i32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (func $func_ref_a (result i32) (i32.const 42)) (func $func_ref_b) (func $ref_operations (result i32) (ref.null func) (ref.is_null) (if (result i32) (then (call $func_ref_a)) (else (i32.const 0)))) (func $func_a) (table $table_1 0 funcref) (func $table_operations (drop (table.size $table_1))) (func $operations (param $arg i32) (result i32) (i32.add (i32.add (i32.ctz (local.get $arg)) (i32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (table $table_1 0 funcref) (func $func_f) (table $table_1 0 funcref) (func $table_operations (drop (table.size $table_1))) (func $local_tee (param i32) (result i32) (local i32) (local.set 0 (local.get 0)) (local.tee 0 (i32.add (local.get 0) (i32.const 1)))) (export "local_tee" (func $local_tee)) (func $store_value (param $address i32) (param $value f32) (f32.store (get_local $address) (get_local $value))) (func $load_value (param $address i32) (result f32) (f32.load (get_local $address))) (table $table_1 0 funcref) (func $set_global (param $value i64) get_local $value set_global $globalname_f) (func $get_global (result i64) get_global $globalname_f) (func $arithmetic (param $var_e f32) (param $var_f f32) (result f32) get_local $var_e get_local $var_f f32.div))