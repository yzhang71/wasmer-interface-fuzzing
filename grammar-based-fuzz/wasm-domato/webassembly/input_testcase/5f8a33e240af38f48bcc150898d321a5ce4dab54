(module (global $globalname_a (mut f64) f32.const 9223372036854775807.0) (global $globalname_a (mut i32) f64.const 4.0) (global $globalname_e (mut i32) f64.const -2452346536.5345346) (global $globalname_e (mut i32) i64.const -512) (global $globalname_c (mut f64) f32.const -512) (global $globalname_c (mut i32) f32.const 2147483647.0) (global $globalname_e (mut i64) f32.const 523.834759734) (global $globalname_a (mut f32) i64.const 3.0) (global $globalname_a (mut f64) f64.const 16) (global $globalname_e (mut i32) f32.const 1024) (memory $mem -1) (data (f32.const 2.0) "Hello, WebAssembly!こんにちは、WebAssembly！こんにちは🌸你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑🥝🥥🥒🥔🥕세요🌺Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌ਸਤਸ੍ਰੀਅਕਾਲ🌄") (func $mem_func (local $mem_size i32) (local $mem_grow f32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const 9223372036854775807))) (memory.fill (i64.const -2452346536.5345346) (f64.const 4) (f32.const 0.0)) (memory.copy (f64.const -8465473543.4387534) (f32.const 512) (f64.const 9223372036854775807.0)) (memory.init -8465473543.234234 (f64.const 2147483647.0) (i32.const -678234928375235) (i64.const 9223372036854775807.0))) (data (f32.const 4) "こんにちは안녕하세요你好🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלום🐑🌀Привет, мир!📂⚠️") (data (f32.const 512) "🐑🌀Привет, мир!jourHolaשלוםЗдравствуйт🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלום🐑🌀Привет, ми📂®🦀") (data (f64.const -2452346536.5345346) "👯⛔🏃‍♀️✨📦📂🏃‍♀️✨📦📂📝⬇️📝⬇️🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับちは、Web🌀📂") (data (i64.const 3) "にちは🌀🏃‍♀️✨🐑🌀Привет, мир!📂📦📂🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C📝⬇️🏃‍♀️📂") (data (i32.const -678234928375235) "にちは🌀🏃‍♀️✨📦📂📝⬇️🏃‍♀️🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly📂") (data (f32.const 1.0) "にちは🌀🏃‍♀️✨📦📂📝⬇️🏃‍♀️🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly📂") (data (f64.const 2.0) "🌀⬇️🏃‍♀️✨Hell🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Bueno🌳🌱🌰🌻🌼🌷o, Привет, мир!!こんにちは、WebAssembly📦📂") (data (i32.const 9223372036854775807.0) "🌀📂🎯📝⬇️🏃‍♀️✨📦📂📝⬇️Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAsse📂") (data (i32.const -128) "👯⛔🏃‍♀️✨📦📂🐑🌀Привет, мир!📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C🌀📂") (elem (i32.const 1024) $wrap) (elem (i32.const 4) $trunc) (elem (f32.const 4) $local_tee) (elem (f64.const 52346654) $trunc) (elem (f64.const -256) $arithmetic) (elem (i32.const -512) $extend) (elem (i32.const 2.0) $load_value) (elem (i32.const 4.0) $store_value) (elem (f64.const 989234678) $load_value) (elem (i32.const 1) $local_tee) (elem (f64.const 0) $set_global) (elem (f32.const -1024.345345) $ref_operations) (elem (i64.const -512) $load_value) (elem (f32.const 0) $local_tee) (elem (f32.const 512) $is_even) (elem (i32.const 9223372036854775807.0) $double) (elem (f32.const 1) $extend) (elem (i64.const 3.0) $ref_operations) (elem (f32.const 3.0) $store_num) (elem (i32.const -2452346536.5345346) $arithmetic) (elem (i32.const 256) $arithmetic) (elem (i64.const 2.0) $set_global) (table $table_4 9223372036854775807.0 -2452346536.5345346 funcref) (func $func_g) (func $func_l) (func $func_a) (func $func_k) (func $func_o) (func $func_k) (func $func_l) (func $func_h) (func $func_o) (func $func_h) (func $func_d) (func $table_operations (drop (table.size $table_9))) (type $random_type (func (param f64) (result i64))) (func $double (type $random_type) (param $x f32) (result f64) (f32.mul (local.get $x) (f32.const -1024.345345))) (type $random_type (func (param i32) (result f32))) (func $double (type $random_type) (param $x i32) (result i32) (f32.mul (local.get $x) (f64.const -1))) (func $operations (param $arg f32) (result i32) (f64.add (f32.add (i32.ctz (local.get $arg)) (f32.clz (local.get $arg)))(f64.popcnt (local.get $arg)))) (func $arithmetic (param $var_f i32) (param $var_e f32) (result i64) get_local $var_h get_local $var_h i64.mul) (func $arithmetic (param $var_c i32) (param $var_d f64) (result i64) get_local $var_g get_local $var_b f64.div) (func $local_tee (param i64) (result f32) (local f32) (local.set 2.0 (local.get 52346654)) (local.tee -2147483647.0 (f32.add (local.get 2147483647.0) (i64.const -678234928375235)))) (export "local_tee" (func $local_tee)) (func $operations (param $arg f64) (result f64) (i64.add (i64.add (i32.ctz (local.get $arg)) (f64.clz (local.get $arg)))(f64.popcnt (local.get $arg)))) (func trunc (param $input f64) (result i64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result i64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result f32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result f64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func $set_global (param $value i32) get_local $value set_global $global) (func $get_global (result f64) get_global $global) (func $func_ref_a (result i32) (f32.const 3.0)) (func $func_ref_b) (func $ref_operations (result i64) (ref.null func) (ref.is_null) (if (result i64) (then (call $func_ref_a)) (else (f64.const 1)))) (func $mem_func (local $mem_size f32) (local $mem_grow f32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f64.const 0.0))) (memory.fill (f64.const 64) (i32.const 758394) (f64.const 1024)) (memory.copy (f64.const 2.0) (i64.const 9223372036854775807.0) (i32.const -9223372036854775807)) (memory.init 9223372036854775807.0 (f64.const 4) (i64.const 2.0) (f32.const 256))) (func $local_tee (param f32) (result f64) (local i64) (local.set 2147483647.0 (local.get 4)) (local.tee 512 (f32.add (local.get 4.0) (f64.const 16)))) (func $table_operations (drop (table.size $table_8))) (func $local_tee (param i32) (result i32) (local i32) (local.set 4.0 (local.get 256)) (local.tee 8 (f64.add (local.get -64) (i64.const 128)))) (export "local_tee" (func $local_tee)) (memory 128) (export "memory" (memory 9223372036854775807)) (func $store_num (f32.store (f32.const 0.0) (f64.const 1))) (start $store_num) (func $is_even (param $var_f f32) (result i32) (local $rem f64) (set_local $rem (f64.rem_u (get_local $var_f) (i64.const 16))) (i32.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func $set_global (param $value i64) get_local $value set_global $global) (func $get_global (result i32) get_global $global) (func $local_tee (param i32) (result f64) (local f32) (local.set 16 (local.get 758394)) (local.tee 523.834759734 (i64.add (local.get -5345345346) (f64.const 32)))) (type $random_type (func (param f32) (result i64))) (func $double (type $random_type) (param $x f64) (result f32) (i32.mul (local.get $x) (i32.const 0))) (func trunc (param $input i64) (result f32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result i32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i32) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f64) (result f64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i64) (result i32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result i32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f64) (result i64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f64) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (memory -9223372036854775807.0) (export "memory" (memory -64)) (func $store_num (i32.store (f64.const 9223372036854775807) (i32.const 1024))) (start $store_num) (func $is_even (param $var_g f64) (result f64) (local $rem i64) (set_local $rem (f32.rem_u (get_local $var_e) (i32.const 758394))) (f64.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func $func_ref_a (result i64) (f32.const 8)) (func $func_ref_b) (func $ref_operations (result f64) (ref.null func) (ref.is_null) (if (result f32) (then (call $func_ref_a)) (else (f32.const -1024.345345)))) (func $set_global (param $value f32) get_local $value set_global $global) (func $get_global (result f32) get_global $global) (func $store_value (param $address f64) (param $value f64) (f64.store (get_local $address) (get_local $value))) (export "store_value" (func $store_value)) (func $local_tee (param f64) (result f32) (local f32) (local.set 523.834759734 (local.get -2147483647.0)) (local.tee 4 (i64.add (local.get -64) (f64.const 128)))) (export "local_tee" (func $local_tee)) (func extend (param $input f64) (result f32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result f32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result f32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f64) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result i64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result i32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i32) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result i64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f32) (result i64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result i32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result i64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i64) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i32) (result i64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result i32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f32) (result f32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result i32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result f32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f64) (result i64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i32) (result i32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f32) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func $mem_func (local $mem_size i32) (local $mem_grow f32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f64.const 1.0))) (memory.fill (i64.const 8) (f64.const 4.0) (f32.const -9223372036854775807)) (memory.copy (i32.const 0.0) (i64.const 9223372036854775807) (i64.const 32)) (memory.init -8465473543.4387534 (i32.const 3) (f32.const -64) (f32.const 8))) (func $local_tee (param f32) (result f32) (local i64) (local.set 1024 (local.get -8)) (local.tee 2147483647 (f32.add (local.get -256) (i64.const -1)))) (type $random_type (func (param i64) (result i64))) (func $double (type $random_type) (param $x i64) (result i32) (i32.mul (local.get $x) (i32.const -8))) (func (param v128) (param i32) (param v128) (param i32) (param i32) (param v128) (param v128) (result funcref) (result i32) (result f64) (result f64) (result funcref) (result v128) (result funcref) (result f64) (result f32) (result f32) (result externref) (local v128) local.set $general_var_h f32x4.abs memory.grow) (func trunc (param $input i64) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result f32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f32) (result f32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i64) (result f64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result f32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func $load_value (param $address f32) (result i32) (i32.load (get_local $address))) (export "load_value" (func $load_value)) (func $store_value (param $address f32) (param $value f32) (f32.store (get_local $address) (get_local $value))) (export "store_value" (func $store_value)))