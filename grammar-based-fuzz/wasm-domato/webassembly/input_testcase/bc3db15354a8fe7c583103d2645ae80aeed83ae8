(module (global $globalname_d (mut i32) f32.const -32) (memory $mem 1024) (data (f32.const 512) "こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAssembly！") (func $mem_func (local $mem_size f32) (local $mem_grow i64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i32.const 3))) (memory.fill (f32.const -8465473543.4387534) (f64.const -1024.345345) (f64.const -2147483647.0)) (memory.copy (i32.const 989234678) (i64.const 9223372036854775807) (f32.const 0)) (memory.init 2147483647 (f64.const 1024) (i64.const 8) (i64.const 512))) (data (i64.const 512) "にちは🌀🐑🌀🌟CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTag👯⛔こんにちは、こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯🌲🌳🌱🌰WebAssemblyПривет, мир!📂📂🔧") (data (f64.const 52346654) "🌀🏃‍♀️✨📦📂🐑🌀ПрПривет🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹ивет, мтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับир!📂📝⬇️🏃‍♀️📂🦀") (data (i64.const -9223372036854775807) "👯🏃‍♀️✨📦📂📝⬇️⛔🏃‍♀️🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにち🥝🥥🥒🥔🥕✨📦📂📝⬇️🌀📂") (data (f32.const -128) "こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAssembly！") (data (f64.const -64) "Hello, WebAssembly!こんにちは、WebAssembly！こんにちは🌸你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑🥝🥥🥒🥔🥕세요🌺Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌ਸਤਸ੍ਰੀਅਕਾਲ🌄") (data (f32.const -16) "®🦀🏰Olá🐾🦜Привет🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly！") (data (i32.const 1024) "🌀📂🎯📝⬇️🏃‍♀️✨📦📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีค🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGutรับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C📂") (data (f64.const -128) "👯🏃‍♀️✨📦📂📝⬇️⛔🏃‍♀️🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにち🥝🥥🥒🥔🥕✨📦📂📝⬇️🌀📂") (data (f32.const 8) "👯⛔🏃‍♀️✨📦📂🐑🌀Привет, мир!📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C🌀📂") (data (i32.const 2.0) "🌀📂🎯📝⬇️🏃‍♀️✨📦📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีค🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGutรับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C📂") (data (f64.const 9223372036854775807.0) "こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAssembly！") (data (f64.const 989234678) "こんにちは、WebAssembly！🌞Grüßgott🦉🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑🥝🥥🥒🥔🥕세요🌺Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครั🍒🍓🥑🥝🥥🥒🥔🥕🥨") (data (i32.const -8) "🌀🏃‍♀️✨📦📂🐑🌀ПрПривет🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹ивет, мтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับир!📂📝⬇️🏃‍♀️📂🦀") (data (f64.const -256) "🌀📂🎯🐑🌀Привет, こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌎CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌐CiaoGutenTagмир!📂📝⬇️🏃‍♀️✨📦📂📝⬇️🏃‍♀️✨📦") (elem (f32.const 32) $get_global) (elem (f64.const 16) $local_tee) (elem (i64.const 32) $sum_n) (elem (f64.const 4) $operations) (table $table_1 -16 -512 funcref) (func $func_b) (func $func_k) (func $func_b) (func $func_g) (func $func_f) (func $func_e) (func $func_e) (func $func_m) (func $func_c) (func $func_c) (func $func_o) (func $func_h) (func $func_e) (func $func_e) (func $table_operations (drop (table.size $table_2))) (table $table_3 4 -8465473543.4387534 funcref) (func $func_d) (func $func_i) (func $table_operations (drop (table.size $table_6))) (table $table_1 523.834759734 989234678 funcref) (func $func_i) (func $func_k) (func $func_a) (func $func_h) (func $func_f) (func $func_b) (func $table_operations (drop (table.size $table_9))) (table $table_0 1.0 989234678 funcref) (func $func_p) (func $func_a) (func $func_l) (func $table_operations (drop (table.size $table_3))) (table $table_1 -512 -32 funcref) (func $func_e) (func $func_p) (func $func_l) (func $func_f) (func $func_d) (func $func_b) (func $table_operations (drop (table.size $table_3))) (table $table_8 2147483647.0 52346654 funcref) (func $func_o) (func $func_f) (func $func_n) (func $func_g) (func $func_i) (func $func_i) (func $func_i) (func $func_k) (func $func_d) (func $func_n) (func $func_e) (func $func_a) (func $func_l) (func $func_h) (func $table_operations (drop (table.size $table_8))) (table $table_4 3.0 -678234928375235 funcref) (func $func_d) (func $func_q) (func $func_a) (func $func_f) (func $func_k) (func $func_b) (func $func_h) (func $func_a) (func $func_e) (func $func_h) (func $func_q) (func $func_q) (func $func_q) (func $table_operations (drop (table.size $table_0))) (table $table_7 128 3 funcref) (func $func_g) (func $func_d) (func $func_n) (func $func_i) (func $func_d) (func $func_k) (func $func_b) (func $func_a) (func $func_l) (func $func_g) (func $func_e) (func $func_f) (func $func_j) (func $func_b) (func $func_e) (func $func_l) (func $func_e) (func $func_m) (func $func_l) (func $func_k) (func $func_a) (func $func_p) (func $func_e) (func $func_l) (func $func_m) (func $table_operations (drop (table.size $table_4))) (table $table_0 512 -873284678 funcref) (func $func_e) (func $func_c) (func $func_b) (func $table_operations (drop (table.size $table_1))) (table $table_4 -1 1 funcref) (func $func_p) (func $func_j) (func $func_n) (func $func_c) (func $func_f) (func $func_l) (func $func_g) (func $func_q) (func $func_q) (func $func_e) (func $func_o) (func $func_a) (func $func_o) (func $func_o) (func $table_operations (drop (table.size $table_5))) (table $table_1 4 1024 funcref) (func $func_n) (func $func_h) (func $func_j) (func $func_p) (func $func_j) (func $func_h) (func $func_d) (func $func_o) (func $table_operations (drop (table.size $table_4))) (table $table_3 16 -128 funcref) (func $func_k) (func $func_g) (func $table_operations (drop (table.size $table_2))) (table $table_7 0 -32 funcref) (func $func_e) (func $func_h) (func $func_e) (func $table_operations (drop (table.size $table_9))) (func (param f64) (param v128) (param externref) (param externref) (param funcref) (param i32) (param funcref) (param v128) (param v128) (param i32) (param v128) (result v128) (result v128) (result funcref) (result f64) (result i32) (local externref) elem.drop $general_var_h v128.store32_lane table.size $general_var_h call $general_var_b memory.fill memory.grow v128.load(8x8_s) f64.sub) (func $local_tee (param i64) (result i32) (local f32) (local.set -1024.345345 (local.get -5345345346)) (local.tee 52346654 (f64.add (local.get -5345345346) (f32.const 1024)))) (func $operations (param $arg i64) (result f32) (i64.add (i64.add (i64.ctz (local.get $arg)) (i64.clz (local.get $arg)))(f64.popcnt (local.get $arg)))) (memory 64) (export "memory" (memory 523.834759734)) (func $store_num (f64.store (i32.const 9223372036854775807.0) (i64.const 16))) (start $store_num) (memory -64) (export "memory" (memory -5345345346)) (func $store_num (i64.store (i64.const -256) (f64.const 2.0))) (start $store_num) (func trunc (param $input i64) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result i32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f64) (result i32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i32) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i32) (result i32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result i32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result i32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result f64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result i32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result i64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i32) (result i64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result f64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result i64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result i64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i32) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (type $random_type (func (param f64) (result f64))) (func $double (type $random_type) (param $x i64) (result i64) (f32.mul (local.get $x) (i64.const 2.0))) (func $operations (param $arg i64) (result f64) (f32.add (i32.add (f32.ctz (local.get $arg)) (f32.clz (local.get $arg)))(f32.popcnt (local.get $arg)))) (func $func_ref_a (result i64) (f64.const 4)) (func $func_ref_b) (func $ref_operations (result f64) (ref.null func) (ref.is_null) (if (result i64) (then (call $func_ref_a)) (else (i32.const -2452346536.5345346)))) (func $table_operations (drop (table.size $table_5))) (func extend (param $input f64) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f32) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result i32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result f32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result f64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result f32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result f64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func $operations (param $arg i64) (result i32) (i64.add (f64.add (i32.ctz (local.get $arg)) (f32.clz (local.get $arg)))(i64.popcnt (local.get $arg)))))