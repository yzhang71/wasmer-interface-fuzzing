(module (global $globalname_g (mut f32) f32.const -1024.345345) (memory $mem 523.834759734) (data (f64.const 4) "にちは🌀🏃‍♀️✨🐑🌀Привет, мир!📂📦📂🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C📝⬇️🏃‍♀️📂") (func $mem_func (local $mem_size f64) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i64.const 3.0))) (memory.fill (i64.const 16) (f64.const -2452346536.5345346) (i32.const -2147483647.0)) (memory.copy (f64.const -873284678) (f64.const 32) (i64.const 1)) (memory.init 0 (i64.const 8) (i64.const 758394) (i32.const -8465473543.234234))) (data (i64.const 52346654) "🌀📂🎯🐑🌀Привет, こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌎CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌐CiaoGutenTagмир!📂📝⬇️🏃‍♀️✨📦📂📝⬇️🏃‍♀️✨📦") (data (f64.const 1.0) "Hello, WebAssembly!こんにちは、WebAssembly！こんにちは🌸你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑🥝🥥🥒🥔🥕세요🌺Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌ਸਤਸ੍ਰੀਅਕਾਲ🌄") (elem (i64.const 3.0) $store_value) (elem (i32.const 4.0) $is_even) (elem (f64.const 512) $extend) (elem (i64.const 989234678) $table_operations) (elem (i32.const 2147483647) $store_num) (table $table_0 -8465473543.4387534 523.834759734 funcref) (func $func_d) (func $func_k) (func $func_j) (func $func_n) (func $func_o) (func $func_n) (func $func_k) (func $table_operations (drop (table.size $table_4))) (func $load_value (param $address i64) (result i32) (f64.load (get_local $address))) (export "load_value" (func $load_value)) (memory 16) (export "memory" (memory 4)) (func $store_num (f32.store (i32.const 2147483647.0) (f32.const 256))) (start $store_num) (func $load_value (param $address i32) (result f32) (i64.load (get_local $address))) (export "load_value" (func $load_value)) (func $func_ref_a (result f64) (i32.const 1024)) (func $func_ref_b) (func $ref_operations (result i32) (ref.null func) (ref.is_null) (if (result i32) (then (call $func_ref_a)) (else (i64.const 2.0)))) (func $table_operations (drop (table.size $table_6))) (func $operations (param $arg f64) (result f32) (i32.add (i32.add (f32.ctz (local.get $arg)) (i64.clz (local.get $arg)))(i64.popcnt (local.get $arg)))) (func $table_operations (drop (table.size $table_2))) (func $set_global (param $value f32) get_local $value set_global $global) (func $get_global (result f32) get_global $global) (func $arithmetic (param $var_e f32) (param $var_e i64) (result i64) get_local $var_f get_local $var_e i32.mul) (func trunc (param $input i64) (result i32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result f64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result i32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result f32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (memory 1024) (export "memory" (memory 1024)) (func $store_num (f64.store (i32.const 3) (f64.const 3.0))) (start $store_num))