(module (global $globalname_f (mut i64) f64.const 989234678) (global $globalname_d (mut f32) i64.const -8) (global $globalname_d (mut f32) f64.const -9223372036854775807) (memory $mem -5345345346) (data (f64.const -32) "👯⛔🏃‍♀️✨📦📂🐑🌀Привет, мир!📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C🌀📂") (func $mem_func (local $mem_size f64) (local $mem_grow i64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i64.const -8))) (memory.fill (f32.const -64) (f64.const -512) (i64.const 52346654)) (memory.copy (f32.const 523.834759734) (i64.const 128) (i32.const 1024)) (memory.init 8 (f64.const 0.0) (i64.const 52346654) (f32.const 758394))) (data (f32.const -2147483647.0) "🌀📂🎯📝⬇️🏃‍♀️✨📦📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีค🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGutรับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C📂") (data (i32.const 4.0) "👯⛔🏃‍♀️✨📦📂🏃‍♀️✨📦📂📝⬇️📝⬇️🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับちは、Web🌀📂") (data (f32.const -5345345346) "🌀👯⛔📂🐑🌀Привет, мир!🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちはтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับ、Web📂🏃‍♀️✨📦📂📝⬇️") (data (i32.const 0) "こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌐CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTag👯⛔こんにちは、こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯🌲🌳🌱🌰WebAssembly！") (data (i32.const 64) "👯⛔🏃‍♀️✨📦📂🏃‍♀️✨📦📂📝⬇️📝⬇️🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับちは、Web🌀📂") (data (f32.const -1024.345345) "👯⛔🏃‍♀️✨📦📂🐑🌀Привет, мир!📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C🌀📂") (data (f64.const 1.0) "🌀🏃‍♀️✨📦📂🐑🌀ПрПривет🌴🌵🌷🌸🌹🌺🌻🌼💐🍁🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹ивет, мтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับир!📂📝⬇️🏃‍♀️📂🦀") (data (f32.const 523.834759734) "にちは🌀🐑🌀🌟CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTag👯⛔こんにちは、こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯🌲🌳🌱🌰WebAssemblyПривет, мир!📂📂🔧") (data (i64.const 64) "🌀📂🎯🐑🌀Привет, こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌎CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌐CiaoGutenTagмир!📂📝⬇️🏃‍♀️✨📦📂📝⬇️🏃‍♀️✨📦") (data (f32.const 758394) "🌀📂🎯🐑🌀Привет, こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌎CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌐CiaoGutenTagмир!📂📝⬇️🏃‍♀️✨📦📂📝⬇️🏃‍♀️✨📦") (data (i64.const 3) "👯⛔🌀📂®🦀こんにち🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGuteBuenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑🥝🥥🥒🥔🥕세요🌺Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครัnTagこんにちは안녕하세요नमस्ते🌍Ciは") (data (f64.const 1024) "にちは🌀🐑🌀🌟CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTag👯⛔こんにちは、こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯🌲🌳🌱🌰WebAssemblyПривет, мир!📂📂🔧") (data (i32.const 758394) "🌀📂🎯🐑🌀Привет, こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌎CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्ते🌐CiaoGutenTagмир!📂📝⬇️🏃‍♀️✨📦📂📝⬇️🏃‍♀️✨📦") (data (i32.const -8465473543.4387534) "にちは🌀🐑🌀🌟CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTag👯⛔こんにちは、こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯🌲🌳🌱🌰WebAssemblyПривет, мир!📂📂🔧") (data (f32.const 3) "🌀📂🎯📝⬇️🏃‍♀️✨📦📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีค🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGutรับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C📂") (data (f32.const 4) "にちは🌀🐑🌀🌟CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTag👯⛔こんにちは、こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯🌲🌳🌱🌰WebAssemblyПривет, мир!📂📂🔧") (data (f32.const -9223372036854775807.0) "👯⛔🏃‍♀️✨📦📂🏃‍♀️✨📦📂📝⬇️📝⬇️🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับちは、Web🌀📂") (elem (i64.const 4.0) $wrap) (elem (f64.const 2.0) $get_global) (elem (f32.const -64) $get_global) (elem (i32.const 4) $store_num) (elem (i32.const -8465473543.4387534) $extend) (elem (i64.const 4) $sum_n) (elem (i64.const -2452346536.5345346) $set_global) (elem (i64.const -873284678) $wrap) (elem (i64.const -678234928375235) $extend) (elem (f64.const 2.0) $trunc) (elem (i32.const 1.0) $trunc) (elem (f64.const -9223372036854775807) $table_operations) (elem (i32.const 9223372036854775807.0) $operations) (elem (i32.const -9223372036854775807) $double) (elem (i64.const 4) $store_value) (elem (i32.const 1024) $arithmetic) (elem (i64.const 1) $load_value) (elem (i32.const 4.0) $local_tee) (elem (i32.const -1024.345345) $ref_operations) (elem (f64.const -32) $is_even) (elem (i64.const 758394) $arithmetic) (elem (i64.const 4.0) $ref_operations) (elem (f64.const -8465473543.4387534) $ref_operations) (elem (i32.const 1024) $local_tee) (elem (i32.const 758394) $load_value) (elem (i64.const 0.0) $load_value) (elem (f32.const -9223372036854775807.0) $store_value) (elem (f32.const 758394) $local_tee) (elem (i32.const 64) $load_value) (elem (i32.const 1) $table_operations) (elem (f32.const -8465473543.234234) $double) (table $table_7 8 512 funcref) (func $func_p) (func $func_m) (func $func_g) (func $func_f) (func $func_k) (func $func_i) (func $func_c) (func $table_operations (drop (table.size $table_2))) (table $table_8 64 2147483647.0 funcref) (func $func_p) (func $func_l) (func $func_o) (func $table_operations (drop (table.size $table_2))) (table $table_8 -32 -8465473543.4387534 funcref) (func $func_d) (func $func_e) (func $func_c) (func $func_p) (func $func_b) (func $func_e) (func $func_n) (func $func_o) (func $table_operations (drop (table.size $table_8))) (table $table_8 3.0 758394 funcref) (func $func_m) (func $func_l) (func $func_e) (func $func_i) (func $func_k) (func $func_f) (func $table_operations (drop (table.size $table_8))) (table $table_4 3.0 2.0 funcref) (func $func_b) (func $table_operations (drop (table.size $table_2))) (func $operations (param $arg i64) (result i32) (f64.add (i32.add (i64.ctz (local.get $arg)) (f64.clz (local.get $arg)))(f64.popcnt (local.get $arg)))) (func $mem_func (local $mem_size i32) (local $mem_grow f64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i32.const 9223372036854775807.0))) (memory.fill (i64.const -32) (f32.const 3) (f64.const -64)) (memory.copy (f64.const 4) (f32.const 1.0) (i32.const 16)) (memory.init 0 (f32.const 9223372036854775807) (i64.const 0) (i32.const -64))) (func $load_value (param $address f64) (result f64) (i32.load (get_local $address))) (export "load_value" (func $load_value)) (func $is_even (param $var_e i32) (result f64) (local $rem i64) (set_local $rem (f32.rem_u (get_local $var_d) (i64.const 2.0))) (f64.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func (param externref) (param funcref) (param externref) (param v128) (param v128) (param v128) (param externref) (result v128) (local externref) (local v128) (local externref) (local f64) (local f32) (local v128) (local i64) (local funcref) (local i32) v128.store v128.load8_splat) table.get $general_var_j memory.fill table.grow br_table $general_var_e local.set $general_var_d table.get $general_var_i memory.copy f32x4.abs) (func $mem_func (local $mem_size i64) (local $mem_grow i32) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i32.const -873284678))) (memory.fill (i64.const -873284678) (f32.const 2.0) (f32.const 16)) (memory.copy (f32.const -8465473543.234234) (i32.const 8) (i32.const -8465473543.4387534)) (memory.init -2452346536.5345346 (f64.const -16) (i64.const 523.834759734) (i64.const 523.834759734))) (func (param i32) (param funcref) (result funcref) (result v128) (result v128) (result funcref) (result externref) (result v128) (result externref) (local f64) br_table $general_var_c i32.mul f32.store32 table.set $general_var_g i64x2.sub table.grow v128.store64_lane nop local.tee $general_var_c v128.load64_lane) i32.load(16_s)) (func $mem_func (local $mem_size f64) (local $mem_grow i64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const -8465473543.4387534))) (memory.fill (i64.const -16) (f32.const 8) (i64.const 2147483647)) (memory.copy (f32.const 64) (f32.const -32) (f32.const -9223372036854775807)) (memory.init -9223372036854775807.0 (f64.const 1) (f64.const 8) (i64.const 2147483647.0))) (memory -8) (export "memory" (memory 9223372036854775807)) (func $store_num (i32.store (i64.const -873284678) (i32.const 64))) (start $store_num) (memory 4) (export "memory" (memory 523.834759734)) (func $store_num (i32.store (i64.const -2147483647.0) (f64.const 1024))) (start $store_num) (func $table_operations (drop (table.size $table_6))) (func $store_value (param $address i64) (param $value f32) (i32.store (get_local $address) (get_local $value))) (export "store_value" (func $store_value)) (func $mem_func (local $mem_size f32) (local $mem_grow f64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (i32.const -128))) (memory.fill (i64.const 523.834759734) (f32.const 128) (f32.const 32)) (memory.copy (i32.const -256) (i64.const 8) (f64.const 989234678)) (memory.init 2.0 (i32.const -873284678) (f64.const 1) (i64.const -256))) (func extend (param $input i32) (result f32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result f32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result f32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result f64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i64) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result i32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result f64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f32) (result f64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result f32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i64) (result f32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result i32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result i64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result f32) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i64) (result f64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func $local_tee (param f64) (result f64) (local f32) (local.set -9223372036854775807 (local.get 1)) (local.tee -32 (f32.add (local.get 1024) (f64.const 8)))) (export "local_tee" (func $local_tee)) (func (param funcref) (param v128) (param f64) (param i64) (param funcref) (param funcref) (param funcref) (param i32) (param funcref) (param funcref) (param f64) (param f64) (param funcref) (param i32) (param funcref) (param v128) (result v128) (result i64) (result v128) (local f64) (local v128) (local v128) (local funcref) (local f64) (local v128) (local v128) (local v128) (local v128) (local funcref) (local i32) (local funcref) (local v128) (local i32) (local funcref) (local v128) (local i64) select memory.grow f64.extend_i32_s v128.load(16x4_u) br_if $general_var_e global.set $general_var_h f64x2.extend_high_f32x4 table.get table.size br_if $general_var_o memory.init $general_var_e v128.const f32x4 0.0 i32.trunc_i64_s v128.load(32x2_u) table.copy $general_var_f $general_var_c memory.size i64.const -1024.345345) (func $is_even (param $var_b f64) (result i32) (local $rem f64) (set_local $rem (i64.rem_u (get_local $var_h) (i32.const -64))) (f32.eqz (get_local $rem))) (export "is_even" (func $is_even)) (func $table_operations (drop (table.size $table_1))) (memory -128) (export "memory" (memory 64)) (func $store_num (f32.store (f64.const 8) (i32.const -128))) (start $store_num) (func $table_operations (drop (table.size $table_1))) (func $set_global (param $value f64) get_local $value set_global $global) (func $get_global (result i64) get_global $global) (func wrap (param $input i64) (result i32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result i32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i64) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i32) (result f32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result f64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i32) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result i32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result f32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f64) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result i32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i32) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i32) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i32) (result f32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i32) (result i64) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result f64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f64) (result f64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result i64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i64) (result i32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f32) (result f64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i64) (result i32) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func $local_tee (param i32) (result f32) (local f64) (local.set 2.0 (local.get 989234678)) (local.tee -9223372036854775807.0 (i64.add (local.get 52346654) (i64.const 2147483647.0)))) (export "local_tee" (func $local_tee)) (func $operations (param $arg f32) (result i32) (i32.add (f64.add (f64.ctz (local.get $arg)) (f32.clz (local.get $arg)))(f64.popcnt (local.get $arg)))) (func extend (param $input f64) (result f32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result i64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i32) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f32) (result i32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result f32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result i64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result f64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result f64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result f32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f32) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i32) (result f32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result i32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f32) (result i64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result i32) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input f64) (result f64) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i32) (result f64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result i32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input i32) (result i32) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result i64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f32) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f32) (result i32) (i32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result f32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result i32) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result i32) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result i64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func $func_ref_a (result i32) (i32.const -512)) (func $func_ref_b) (func $ref_operations (result f64) (ref.null func) (ref.is_null) (if (result i32) (then (call $func_ref_a)) (else (f32.const 0)))) (func $load_value (param $address i32) (result f32) (f64.load (get_local $address))) (export "load_value" (func $load_value)) (memory 4) (export "memory" (memory -9223372036854775807.0)) (func $store_num (f64.store (f32.const -5345345346) (i32.const 256))) (start $store_num) (func $local_tee (param i64) (result f32) (local f32) (local.set 256 (local.get 2.0)) (local.tee 758394 (i32.add (local.get -64) (i32.const 989234678)))) (export "local_tee" (func $local_tee)) (func extend (param $input f64) (result i32) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input i32) (result i64) (i64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input i64) (result f32) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i32) (result i64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f64) (result i64) (i64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input i64) (result f32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result i32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result i64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f64) (result i64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input f64) (result i32) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result i64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result i32) (f32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input i32) (result f64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i64) (result i64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input f32) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)) (func extend (param $input i64) (result i64) (f64.extend8_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f64) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input f32) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result i64) (f64.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func extend (param $input i32) (result i64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $extend)) (func wrap (param $input f32) (result f64) (f64.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func $load_value (param $address i64) (result f32) (f64.load (get_local $address))) (export "load_value" (func $load_value)) (func $local_tee (param f64) (result i64) (local i64) (local.set -2452346536.5345346 (local.get -64)) (local.tee -256 (f64.add (local.get -64) (i32.const -64)))) (export "local_tee" (func $local_tee)) (func $operations (param $arg i32) (result i32) (f32.add (f32.add (f32.ctz (local.get $arg)) (i32.clz (local.get $arg)))(i32.popcnt (local.get $arg)))) (func $set_global (param $value i64) get_local $value set_global $global) (func $get_global (result f32) get_global $global) (func $set_global (param $value i64) get_local $value set_global $global) (func $get_global (result f32) get_global $global) (func $func_ref_a (result i64) (f32.const 8)) (func $func_ref_b) (func $ref_operations (result f32) (ref.null func) (ref.is_null) (if (result i64) (then (call $func_ref_a)) (else (i32.const 1.0)))))