(module (global $globalname_g (mut i64) f64.const -2452346536.5345346) (global $globalname_d (mut i32) f32.const -5345345346) (memory $mem 4) (data (i32.const 3) "🌀📂🎯📝⬇️🏃‍♀️✨📦📂📝⬇️Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAsse📂") (func $mem_func (local $mem_size i64) (local $mem_grow f64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const 758394))) (memory.fill (f64.const -2147483647.0) (i32.const -32) (i64.const 64)) (memory.copy (f64.const -2452346536.5345346) (f32.const 1024) (f32.const -16)) (memory.init 8 (f64.const 758394) (f64.const 523.834759734) (f32.const 8))) (data (f64.const 758394) "こんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🚀CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌐CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับनमस्तेسلام🌟CiaoGutenTag👯⛔こんにちは、こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯🌲🌳🌱🌰WebAssembly！") (data (i32.const 4.0) "こんにちは🌸안녕하세요🌺🚀你好🐼Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌🌄❤️🎉🎶🌈🏞🐬🏄‍♂️🏯\00\00\80\3Fこんにちは、WebAssembly！") (data (f64.const 1024) "👯⛔🏃‍♀️✨📦📂🐑🌀Привет, мир!📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C🌀📂") (data (i64.const 1024) "👯⛔🏃‍♀️✨📦📂🐑🌀Привет, мир!📂📝⬇️🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍C🌀📂") (data (f32.const 1) "🌀👯⛔📂🐑🌀Привет, мир!🌻🌼🌷🌹🌸🌾🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちはтеสวัสดีครับनमस्तेسلام🌍CiaoGutenTagこんにちは안녕하세요你好BonjourHolaשלוםЗдравствуйтеสวัสดีครับ、Web📂🏃‍♀️✨📦📂📝⬇️") (elem (f32.const 523.834759734) $extend) (elem (i64.const -678234928375235) $local_tee) (table $table_1 -32 -9223372036854775807 funcref) (func $func_c) (func $func_p) (func $func_p) (func $func_d) (func $func_a) (func $func_b) (func $func_f) (func $func_c) (func $table_operations (drop (table.size $table_6))) (table $table_0 523.834759734 -512 funcref) (func $func_q) (func $func_e) (func $func_j) (func $func_f) (func $func_b) (func $func_e) (func $func_c) (func $func_d) (func $func_e) (func $func_n) (func $func_m) (func $func_m) (func $func_k) (func $func_a) (func $func_j) (func $func_g) (func $func_m) (func $func_j) (func $func_k) (func $func_e) (func $func_c) (func $func_o) (func $func_d) (func $func_m) (func $func_q) (func $func_l) (func $table_operations (drop (table.size $table_9))) (table $table_2 2147483647.0 2147483647 funcref) (func $func_p) (func $func_q) (func $func_a) (func $func_n) (func $table_operations (drop (table.size $table_6))) (type $random_type (func (param i32) (result f64))) (func $double (type $random_type) (param $x i32) (result i64) (f64.mul (local.get $x) (i64.const -1))) (func $table_operations (drop (table.size $table_5))) (type $random_type (func (param f32) (result f32))) (func $double (type $random_type) (param $x f64) (result i32) (f32.mul (local.get $x) (f32.const -1024.345345))) (func $sum_n (export "sum_n") (param $n i32) (result f32) (local $sum i32) (local $i f32) f64.const 8 local.set $sum f64.const 9223372036854775807 local.set $i (loop $loop local.get $i local.get $n f32.gt_s if br $loop end local.get $sum local.get $i i32.add local.set $sum local.get $i f32.const -5345345346 i32.add local.set $i br $loop) local.get $sum) (func extend (param $input i32) (result f64) (i32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func extend (param $input f32) (result f64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func wrap (param $input i64) (result f64) (i64.extend8_s (local.get $input))) (export "cvtop_name" (func $trunc)) (func trunc (param $input i64) (result f64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result i32) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $extend)) (func trunc (param $input f32) (result f64) (f32.trunc_f64_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func trunc (param $input f32) (result f64) (f32.extend8_s (local.get $input))) (export "cvtop_name" (func $wrap)) (func wrap (param $input f64) (result f64) (i32.wrap_i64 (local.get $input))) (export "cvtop_name" (func $trunc)))