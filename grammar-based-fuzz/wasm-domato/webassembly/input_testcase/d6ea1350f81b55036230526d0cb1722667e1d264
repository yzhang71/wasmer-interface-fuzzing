(module (global $globalname_e (mut f32) f32.const -32) (global $globalname_c (mut i32) i64.const 1) (global $globalname_c (mut f64) i32.const -9223372036854775807) (global $globalname_b (mut i32) i32.const 1024) (memory $mem 3) (data (i32.const 3.0) "Hello, WebAssembly!こんにちは、WebAssembly！こんにちは🌸你好🐼안녕하🦄Hej🌻안녕하세요💫こんにちは🍣🌍नमस्ते🕌सभी🌊کے🌹Buenos días🌴🍉🍍🍋🍊🍇🍒🍓🥑🥝🥥🥒🥔🥕세요🌺Bonjour🥐Hola🌮שלום🕍Здравствуйте🐻สวัสดีครับ🐘नमस्ते🕌ਸਤਸ੍ਰੀਅਕਾਲ🌄") (func $mem_func (local $mem_size i64) (local $mem_grow i64) (local.set $mem_size (memory.size)) (local.set $mem_grow (memory.grow (f32.const -9223372036854775807.0))) (memory.fill (f32.const -1024.345345) (i64.const -128) (i64.const 3)) (memory.copy (f32.const 64) (f64.const 989234678) (i32.const -8)) (memory.init 52346654 (i64.const 4) (i32.const 0.0) (i64.const -8465473543.4387534))) (data (i32.const 52346654) "にちは🌀🏃‍♀️✨📦📂📝⬇️🏃‍♀️🍂🍃🍀🌿☘️🌾🌺🌻🌼🌷🌹🌸🌾🌾🌿🌵🌴🌲еสวัสดีครับםЗдравствуйтеสวัสดีครับनमस्ते🌍CiaoGutenTagこんにちは안녕하세요नमस्ते🌍CiaoGut🌿🌵🌴🌲🌳🌱🌰🌻🌼🌷🌹🌸🌺🌾こんにちは、WebAssembly📂") (elem (i64.const 2147483647) $double) (elem (f64.const 2147483647.0) $arithmetic) (elem (f32.const -16) $extend) (elem (f64.const -8465473543.234234) $set_global) (table $table_1 -16 1.0 funcref) (func $func_d) (func $func_f) (func $table_operations (drop (table.size $table_3))) (func $set_global (param $value f32) get_local $value set_global $global) (func $get_global (result i32) get_global $global) (func $table_operations (drop (table.size $table_5))) (func $table_operations (drop (table.size $table_0))) (memory 8) (export "memory" (memory 2.0)) (func $store_num (f32.store (i32.const -873284678) (f32.const -128))) (start $store_num) (memory 2.0) (export "memory" (memory 9223372036854775807.0)) (func $store_num (f64.store (f32.const 256) (i32.const -9223372036854775807))) (start $store_num) (func (param externref) (param funcref) (param i64) (result externref) (result v128) (result v128) (result externref) (result v128) (result v128) (result v128) (result externref) (result v128) (result v128) (result i64) (result i64) (result funcref) (local v128) (local v128) v128.load8_zero) table.set $general_var_k v128.store64_lane f64.load(8_s) f32.trunc_i64_u v128.load(8x8_s) v128.load(16x4_u) table.fill ref.func $general_var_i call $general_var_f table.set $general_var_i nop v128.store64_lane memory.copy v128.store64_lane table.grow $general_var_o f64.store16 f64x2.all_true f64x2.shr_u ref.func $general_var_b table.set $general_var_f drop v128.store16_lane v128.const f32x4 -512 v128.load(32x2_u)) (type $random_type (func (param i32) (result f32))) (func $double (type $random_type) (param $x f32) (result f64) (i32.mul (local.get $x) (f64.const -64))) (memory -128) (export "memory" (memory -8465473543.234234)) (func $store_num (f32.store (i64.const -2452346536.5345346) (f32.const 2147483647.0))) (start $store_num) (func $store_value (param $address f32) (param $value i32) (i32.store (get_local $address) (get_local $value))) (export "store_value" (func $store_value)) (func $func_ref_a (result i64) (f32.const 3.0)) (func $func_ref_b) (func $ref_operations (result i32) (ref.null func) (ref.is_null) (if (result i32) (then (call $func_ref_a)) (else (i64.const -5345345346)))))