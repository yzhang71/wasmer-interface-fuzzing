<num_type_i32> = i32 
<num_type_i64> = i64 
<num_type_f32> = f32 
<num_type_f64> = f64
<funcname> = add
<funcname> = div
<funcname> = sub
<funcname> = mul
<varname_a> = $var_a 
<varname_b> = $var_b
<varname_c> = $var_c 
<varname_d> = $var_d
<varname_e> = $var_e 
<varname_f> = $var_f
<varname_g> = $var_g 
<varname_h> = $var_h
<params_i32> = (param <varname_a> <num_type_i32>) (param <varname_b> <num_type_i32>) 
<params_i64> = (param <varname_c> <num_type_i64>) (param <varname_d> <num_type_i64>)
<params_f32> = (param <varname_e> <num_type_f32>) (param <varname_f> <num_type_f32>)
<params_f64> = (param <varname_g> <num_type_f64>) (param <varname_h> <num_type_f64>)
<result_i32> = (result <num_type_i32>)
<result_i64> = (result <num_type_i64>)
<result_f32> = (result <num_type_f32>)
<result_f64> = (result <num_type_f64>)
<instruction_i32> = get_local <varname_a> get_local <varname_b> <num_type_i32>.add
<instruction_i32> = get_local <varname_a> get_local <varname_b> <num_type_i32>.div
<instruction_i32> = get_local <varname_a> get_local <varname_b> <num_type_i32>.sub
<instruction_i32> = get_local <varname_a> get_local <varname_b> <num_type_i32>.mul
<instruction_i64> = get_local <varname_c> get_local <varname_d> <num_type_i64>.add
<instruction_i64> = get_local <varname_c> get_local <varname_d> <num_type_i64>.div
<instruction_i64> = get_local <varname_c> get_local <varname_d> <num_type_i64>.sub
<instruction_i64> = get_local <varname_c> get_local <varname_d> <num_type_i64>.mul
<instruction_f32> = get_local <varname_e> get_local <varname_f> <num_type_f32>.add
<instruction_f32> = get_local <varname_e> get_local <varname_f> <num_type_f32>.div
<instruction_f32> = get_local <varname_e> get_local <varname_f> <num_type_f32>.sub
<instruction_f32> = get_local <varname_e> get_local <varname_f> <num_type_f32>.mul
<instruction_f64> = get_local <varname_g> get_local <varname_h> <num_type_f64>.add
<instruction_f64> = get_local <varname_g> get_local <varname_h> <num_type_f64>.div
<instruction_f64> = get_local <varname_g> get_local <varname_h> <num_type_f64>.sub
<instruction_f64> = get_local <varname_g> get_local <varname_h> <num_type_f64>.mul
<instructions_i32> = <instruction_i32>
<instructions_i64> = <instruction_i64>
<instructions_f32> = <instruction_f32>
<instructions_f64> = <instruction_f64>
<func> = (func $<funcname> <params_i32> <result_i32> <instructions_i32>)
<func> = (func $<funcname> <params_i64> <result_i64> <instructions_i64>)
<func> = (func $<funcname> <params_f32> <result_f32> <instructions_f32>)
<func> = (func $<funcname> <params_f64> <result_f64> <instructions_f64>)
<funcs> = <func>
<module> = (module <funcs> (export "<funcname>" (func $<funcname>)))

<global_type_i32> = i32 
<global_type_i64> = i64 
<global_type_f32> = f32
<global_type_f64> = f64
<global_mutability> = mut
<global_value_i32> = i32.const <i32value>
<global_value_i64> = i64.const <i64value>
<global_value_f32> = f32.const <f32value>
<global_value_f64> = f64.const <f64value>
<i32value> = 0
<i32value> = 1
<i32value> = 2
<i32value> = 3
<i32value> = 4
<i64value> = 0
<i64value> = 1
<i64value> = 2
<i64value> = 3
<i64value> = 4
<f32value> = 0.0
<f32value> = 1.0
<f32value> = 2.0
<f32value> = 3.0
<f32value> = 4.0
<f64value> = 1.0
<f64value> = 2.0
<f64value> = 3.0
<f64value> = 4.0
<global> = (global <global_type_i32> <global_value_i32>)
<global> = (global <global_type_i64> <global_value_i64>)
<global> = (global <global_type_f32> <global_value_f32>)
<global> = (global <global_type_f64> <global_value_f64>)
<global> = (global (<global_mutability> <global_type_i32>) <global_value_i32>)
<global> = (global (<global_mutability> <global_type_i64>) <global_value_i64>)
<global> = (global (<global_mutability> <global_type_f32>) <global_value_f32>)
<global> = (global (<global_mutability> <global_type_f64>) <global_value_f64>)
<globals> = <global> <global>
<globals> = <global> <global>
<globals> = <global> <global>
<module> = (module <globals>)

<elem_type> = funcref
<elem_type> = externref
<elem_type> = anyref
<elem_type> = eqref
<table_type> = (table <elem_type> <limits>)
<limits> = <min> 
<limits> = <max>
<integer> = 1
<integer> = 8
<integer> = 32
<integer> = 255
<integer> = 1024
<min> = <integer>
<max> = <integer>
<table> = (table <table_id> <table_type>)
<table_id> = $table_1
<table_id> = $table_2
<table_id> = $table_3
<table_id> = $table_4
<elem> = (elem <table_id> (i32.const <offset>) <func_idx>)
<offset> = <integer>
<func_idx> = $<funcname>
<tables> = <table> 
<tables> = <table> 
<elems> = <elem> <elems> 
<elems> = <elem> <elem> <elem>
<elems> = <elem> <elem> 
<elems> = <elem>
<module> = (module <tables> <elems>)

!begin lines
<module>;
!end lines

